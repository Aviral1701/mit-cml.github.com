<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xml:base="http://explore.appinventor.mit.edu"  xmlns:dc="http://purl.org/dc/elements/1.1/">
<channel>
 <title>Explore MIT App Inventor blogs</title>
 <link>http://explore.appinventor.mit.edu/blog</link>
 <description></description>
 <language>en</language>
<item>
 <title>Heart Rate Monitor with Arduino/Genuino 101</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2016/08/heart</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;i&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/nunez.png&quot; style=&quot;float: left; margin-right: 10px; width: 15%;&quot; /&gt;This is a guest blog by MIT Master Trainer Jose Luis Núñez&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;Nowadays, the number of connected devices available through the Internet has led to connected people. The infrastructure that supports all the communications between devices is also known as the Internet of Things(IoT).
&lt;/p&gt;
&lt;p&gt;
The need to create apps that can handle IoT has contributed to the development of an extension for MIT App Inventor that provides an easy way to connect to devices.
&lt;/p&gt;
&lt;p&gt;
This tutorial will teach you how to use the Arduino/Genuino 101 board to read data from a heart rate sensor using the Bluetooth Low Energy(BLE) component. If you don&#039;t have the original sensor you can emulate it by using a potentiometer or another analog sensor.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/AnimatedGIFHeartRateMonitor.gif&quot; style=&quot;display:block; margin:auto; width: 30%;&quot; /&gt;&lt;/p&gt;
&lt;h3 style=&quot;padding-top: 1em;&quot;&gt;Requirements&lt;/h3&gt;
&lt;ul&gt;&lt;li&gt;Arduino/Genuino 101 board&lt;/li&gt;
&lt;li&gt;LED&lt;/li&gt;
&lt;li&gt;Heart rate sensor, potentiometer or similar analog component&lt;/li&gt;
&lt;li&gt;Arduino IDE (&lt;a href=&quot;https://www.arduino.cc/en/Main/Software&quot;&gt;https://www.arduino.cc/en/Main/Software&lt;/a&gt;) with libraries BLE and CurieBLE&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;
&lt;h3 style=&quot;padding-top: 1em;&quot;&gt;The Circuit&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/fritzing.jpg&quot; style=&quot;display:block; margin:auto; width: 30%;&quot; /&gt;&lt;/p&gt;
&lt;h3 style=&quot;padding-top: 1em;&quot;&gt;Arduino/Genuino 101 sketch&lt;/h3&gt;
&lt;p&gt;First, we will have to implement the standard Bluetooth Low Energy &quot;Heart Rate Monitor&quot; service using the Arduino IDE and loading a sketch into our board.&lt;/p&gt;
&lt;p&gt;You can copy and paste the source code from:&lt;br /&gt;&lt;a href=&quot;https://www.arduino.cc/en/Tutorial/Genuino101CurieBLEHeartRateMonitor&quot; target=&quot;_blank&quot;&gt;https://www.arduino.cc/en/Tutorial/Genuino101CurieBLEHeartRateMonitor&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The following points show the operating mode of the sketch:&lt;/p&gt;
&lt;ol&gt;&lt;li&gt;Declare the BLE peripheral device (our Arduino board) with its service and characteristic (heart rate sensor).
&lt;/li&gt;&lt;li&gt;Wait for incoming connection with a central device (our smartphone or tablet with Bluetooth).&lt;/li&gt;
&lt;li&gt;Switch on LED to indicate that the board is connected.&lt;/li&gt;
&lt;li&gt;Read the analog sensor updating the value when it changes.&lt;/li&gt;
&lt;li&gt;Switch off the LED when the connection finishes.&lt;/li&gt;
&lt;/ol&gt;&lt;h3 style=&quot;padding-top: 1em;&quot;&gt;Designer view&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/hrm-designer.png&quot; style=&quot;display:block; margin:auto; width: 100%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;We will use the necessary arrangements to display an image of a heart that beats when the devices are bonded, a set of buttons and a label to show the status.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/hrm-components.png&quot; style=&quot;display:block; margin:auto; width: 30%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;We will read data from the sensor updating the text of the label once devices are linked. We will have to import the Bluetooth LE extension to be able to receive the values from the sensor.&lt;/p&gt;
&lt;h3 style=&quot;padding-top: 1em;&quot;&gt;Blocks View&lt;/h3&gt;
&lt;p&gt;First, we will initialize three global variables to store the address of our Arduino/Genuino 101 board, the standard &quot;Heart Rate Monitor&quot; service and its characteristic UUIDs. If you don&#039;t know the meaning of these concepts, you should review them on the &lt;a href=&quot;http://ai2.appinventor.mit.edu/reference/other/IoT.html&quot; target=&quot;_blank&quot;&gt;MIT App Inventor IoT reference page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/hrm0.png&quot; style=&quot;display:block; margin:auto; width: 50%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;When the app starts, we will disable the button named &quot;btnDisconnect&quot; and the timer...it doesn&#039;t make sense if we don&#039;t have a link established.&lt;br /&gt;
At first, the user will press the Scan button and will get a list of Bluetooth devices. We will use a list picker to select our Arduino/Genuino 101 board and connect to it.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/hrm1.png&quot; style=&quot;display:block; margin:auto; width: 50%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;If all goes well we will update the status on the screen using the label. We will also enable the Disconnect button to be able to disconnect from the peripheral device and the timer.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/hrm2.png&quot; style=&quot;display:block; margin:auto; width: 50%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Every second, an event will trigger the clock and our app will check the connection. If all is OK, the app will play a sound of a heart beat and it will change the image while tries to get data from the sensor. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/hrm3.png&quot; style=&quot;display:block; margin:auto; width: 50%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;A &lt;i&gt;ByteValueChanged &lt;/i&gt;event will be triggered when our app detects a change. The new value will be assigned to the text of the label. We will have to use the math round function to convert the byte to a whole number and remove the least significant 0.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/hrm4.png&quot; style=&quot;display:block; margin:auto; width: 50%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Finally, the buttons that will allow user to disconnect and exit...&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/hrm.png&quot; style=&quot;display:block; margin:auto; width: 50%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;That&#039;s all!&lt;br /&gt;
Happy inventing!&lt;/p&gt;
&lt;h3 style=&quot;padding-top: 1em;&quot;&gt;You can download the source code from this link:&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://drive.google.com/open?id=0B0k5c5YtPa8EZWRfZWFIbkY3MG8&quot; target=&quot;_blank&quot;&gt;https://drive.google.com/open?id=0B0k5c5YtPa8EZWRfZWFIbkY3MG8&lt;/a&gt;&lt;/p&gt;
&lt;h3 style=&quot;padding-top: 1em;&quot;&gt;References:&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://www.arduino.cc/en/Tutorial/Genuino101CurieBLEHeartRateMonitor&quot; target=&quot;_blank&quot;&gt;https://www.arduino.cc/en/Tutorial/Genuino101CurieBLEHeartRateMonitor&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;http://ai2.appinventor.mit.edu/reference/other/IoT.html&quot; target=&quot;_blank&quot;&gt;http://ai2.appinventor.mit.edu/reference/other/IoT.html&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-images field-type-image field-label-hidden view-mode-rss&quot;&gt;
    &lt;div class=&quot;field-items&quot;&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/hrm-designer.png?itok=gEGtvdFu&quot; width=&quot;480&quot; height=&quot;282&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/hrm-components.png?itok=K4L1Rvbs&quot; width=&quot;184&quot; height=&quot;480&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/hrm-blocks.png?itok=l8TejI7g&quot; width=&quot;480&quot; height=&quot;287&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/hrm.png?itok=57TaVPmH&quot; width=&quot;480&quot; height=&quot;177&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/hrm4.png?itok=qntIcjdl&quot; width=&quot;480&quot; height=&quot;133&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/hrm3.png?itok=Yp-vjFoM&quot; width=&quot;480&quot; height=&quot;292&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/hrm2.png?itok=7bQHZLP2&quot; width=&quot;480&quot; height=&quot;279&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/hrm1.png?itok=0gENQ3WL&quot; width=&quot;480&quot; height=&quot;210&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/hrm0.png?itok=5SwBnLsp&quot; width=&quot;480&quot; height=&quot;81&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/AnimatedGIFHeartRateMonitor.gif?itok=fyODXpko&quot; width=&quot;285&quot; height=&quot;480&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/fritzing.jpg?itok=1g-6JFGy&quot; width=&quot;306&quot; height=&quot;480&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/heart-rate-monitor.png?itok=VOrZBD-u&quot; width=&quot;290&quot; height=&quot;226&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
      &lt;/div&gt;
&lt;/div&gt;
&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Mon, 08 Aug 2016 15:48:03 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">786 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>App Inventor’s debt to Seymour Papert</title>
 <link>http://explore.appinventor.mit.edu/blogs/hal/2016/08/app</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;To the App Inventor Community:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
I join in grief with my colleagues in computing and education at passing of Seymour Papert on July 31, 2016.   Papert was the world’s preeminent visionary in educational technology:  you can read testaments to his greatness in the obituaries in the New York Times and the MIT News.   Few people in the App Inventor community would have met him, and only some know his monumental book Mindstorms: Children, Computers, and Powerful Ideas.   But his genius has touched those of us who built App Inventor and everyone who uses it.
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.google.com/document/d/1TpT96F8NG7-PBxd3KGjcnwsZ_fUlqdFBN42dZZpoqHU&quot;&gt;More ...&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Sun, 07 Aug 2016 14:39:32 +0000</pubDate>
 <dc:creator>hal</dc:creator>
 <guid isPermaLink="false">783 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>MIT App Inventor and Youth Radio to launch the Youth News Network STEM desk</title>
 <link>http://explore.appinventor.mit.edu/blogs/hal/2016/07/mit-app</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;
I’m exhilarated to announce that MIT App Inventor and Youth Radio (&lt;a href=&quot;https://youthradio.org/&quot;&gt;https://youthradio.org/&lt;/a&gt;)  are beginning a 3-year initiative to launch the STEM Desk for Youth News Network (YNN).  YNN will be a new nationwide model for STEM education based on youth-­driven, multimedia journalism and related app development with App Inventor.   This work is funded by the National Science Foundation’s Advanced Informal STEP Learning program.
&lt;/p&gt;
&lt;p&gt;
Youth Radio trains young people in digital media and technology and launches them on career and education pathways.  Headquartered in Oakland, CA, it serves as National Public Radio’s Youth Desk and reports stories by and about young people across the U.S., bringing youth perspectives to issues of public concern.
&lt;/p&gt;
&lt;p&gt;
YNN aims to overturn conventional beliefs about teens and their phones­­: that these devices are sources of distraction, addiction, abuse, and other forms of trouble.&lt;br /&gt;
The centerpiece of YNN will be Youth Mobile Power, a series of stories about      young people using mobile technologies with creativity and purpose to empower themselves and their communities: activities such as tracking access to fresh water in poor communities, supporting effective autism treatment, and promoting safety on college campuses.  The stories will build on Youth Radio’s Peabody Award-­winning media production capabilities and MIT’s technology strengths to create powerful multimedia productions augmented by new mobile computing resources built on App Inventor.
&lt;/p&gt;
&lt;p&gt;The App Inventor team is tremendously excited by this opportunity to collaborate with Youth Radio.  We’ll be starting work on the project in September.  Watch for us over the next 3 years as we help support and promote the next generation of mobile STEM media innovators!
&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Mon, 25 Jul 2016 22:08:37 +0000</pubDate>
 <dc:creator>hal</dc:creator>
 <guid isPermaLink="false">780 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>AITech - Using Procedures and Any component blocks</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2016/07-0</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;i&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/bosman.png&quot; style=&quot;float: left; margin-right: 10px; width: 15%;&quot; /&gt;This is a guest blog by MIT Master Trainer Sjaak Bosman&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;When components in your app have similar behavior, you can end up with a lot of blocks almost doing the same thing. Using Procedures and Any component blocks not only gives you the possibility to minimize the use of blocks, but also makes it easier for you to add new components and maintain your app in a more comfortable way.&lt;/p&gt;
&lt;div style=&quot;clear: both; width: 100%; margin-bottom: 50px;&quot;&gt;
&lt;div style=&quot;clear: both; float: left; margin-right: 10px; width: 30%;&quot;&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/0.1_design.jpg&quot; style=&quot;display: block; margin:auto; width: 100%&quot; /&gt;&lt;i&gt;Figure 0.1 Design&lt;/i&gt;&lt;/div&gt;
&lt;div width:=&quot;&quot; float:=&quot;&quot; right=&quot;&quot;&gt;
&lt;p style=&quot;padding: 3em;&quot;&gt;
To demonstrate this we are going to implement a group of 3 radio buttons using the CheckBox component.&lt;/p&gt;
&lt;p&gt;
At the end another CheckBox will be added to the group, to demonstrate the ease of using Procedures and Any component blocks.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;h2 style=&quot;clear:both; padding-top: 50px;&quot;&gt;Step 1. Straightforward&lt;/h2&gt;
&lt;p&gt;Pressing a CheckBox will fire its Changed event handler, in which we uncheck both other CheckBoxes. So far it doesn&#039;t look that difficult:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/1.1_straightforward_blocks.jpg&quot; style=&quot;display:block; margin:auto; width: 100%;&quot; /&gt;&lt;br /&gt;&lt;i&gt;Figure 1.1: Straightforward blocks&lt;/i&gt;&lt;/p&gt;
&lt;p style=&quot;padding-top: 3em&quot;&gt;When the user presses Small, its CheckBox will be checked: A green check mark will appear and the Checked property of the chbSizeSmall component will be set to true.
&lt;/p&gt;
&lt;p&gt;
When the users presses Medium next, Small will be unchecked. Now we expect Medium to be checked, but that is not what is happening:
&lt;/p&gt;
&lt;div style=&quot;display:block; margin:auto; width: 100%; padding-bottom: 3em;&quot;&gt;
&lt;div style=&quot;float: left; margin-left: 20%; margin-right: 10%; width: 20%;&quot;&gt;
&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/1.2_press_small.png&quot; style=&quot;width: 100%;&quot; /&gt;&lt;br /&gt;&lt;i&gt;Figure 1.2 Press Small&lt;/i&gt;
&lt;/div&gt;
&lt;div style=&quot;float: left; margin-right: 10%; width: 20%;&quot;&gt;
&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/1.3_press_medium.png&quot; style=&quot;width: 100%;&quot; /&gt;&lt;br /&gt;&lt;i&gt;Figure 1.3 Press Medium&lt;/i&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p style=&quot;clear:both; padding-top: 3em;&quot;&gt;What is going on here?
&lt;/p&gt;
&lt;p&gt;
Pressing Medium causes a Changed event for Medium (1). In the event handler the Checked property of Small is being set to false (2).
&lt;/p&gt;
&lt;p&gt;
Because the Checked property of Small is true (figure 1.2), a Changed event will occur (3). As a result the Checked property of Medium will be set to false (4):
&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/1.4_blocks.jpg&quot; style=&quot;display:block; margin:auto; width: 100%;&quot; /&gt;&lt;br /&gt;&lt;i&gt;Figure 1.5: Blocks&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;A Changed event for Medium will also occur again, because of the change from true (because of user action) to false (4), but that doesn’t change anything anymore (setting Small and Large to false, what they are already are).&lt;/p&gt;
&lt;h2 style=&quot;clear:both; padding-top: 50px;&quot;&gt;Step 2. Straightforward and working&lt;/h2&gt;
&lt;p&gt;
So before we can optimize our blocks by using Procedures and Any component blocks, which is initially our plan and the meaning of this blog, we have to solve this little unwanted feature.
&lt;/p&gt;
&lt;p&gt;
Our goal is to prevent the blocks inside a Changed event handler from being executed when it was not fired because of user action. To do so we are going to use its Enabled property.
&lt;/p&gt;
&lt;p&gt;
First all the blocks inside the Changed event handler will be moved into an if-then control block (blocks in the red rectangle). The if-condition will be the Enabled property of that CheckBox. As a result the blocks in the then-part will only be executed if the Enabled property of that CheckBox is true.
&lt;/p&gt;
&lt;p&gt;
Next all CheckBoxes have to be disabled (by setting the Enabled property to false) before changing the Checked property of the other CheckBoxes. Finally all CheckBoxes must be enabled, to make them available to the user again.
&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/2.1_straightforward_blocks.jpg&quot; style=&quot;display:block; margin:auto; width: 100%;&quot; /&gt;&lt;br /&gt;&lt;i&gt;Figure 2.1: Straightforward blocks&lt;/i&gt;&lt;/p&gt;
&lt;p style=&quot;padding-top: 3em;&quot;&gt;Now it’s almost working:&lt;/p&gt;
&lt;div style=&quot;display:block; margin:auto; width: 100%;&quot;&gt;
&lt;div style=&quot;float: left; margin-left: 5%; margin-right: 5%; width: 20%;&quot;&gt;
&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/2.2_press_small.png&quot; style=&quot;width: 100%;&quot; /&gt;&lt;br /&gt;&lt;i&gt;Figure 2.2: Press Small&lt;/i&gt;
&lt;/div&gt;
&lt;div style=&quot;float: left; margin-right: 5%; width: 20%;&quot;&gt;
&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/2.3_press_medium.png&quot; style=&quot;width: 100%;&quot; /&gt;&lt;br /&gt;&lt;i&gt;Figure 2.3: Press Medium&lt;/i&gt;
&lt;/div&gt;
&lt;div style=&quot;float: left; margin-right: 5%; width: 20%;&quot;&gt;
&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/2.4_press_medium_again.png&quot; style=&quot;width: 100%;&quot; /&gt;&lt;br /&gt;&lt;i&gt;Figure 2.3: Press Medium again&lt;/i&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p style=&quot;clear: both; padding-top: 3em;&quot;&gt;
Pressing a checked CheckBox (figure 2.3) results in all CheckBoxes being unchecked. That issue will be solved in Step 5.
&lt;/p&gt;
&lt;p&gt;
As you can see, each event handler holds a lot of the same blocks: Setting the Enabled property of all CheckBoxes to false and, after setting the Checked property of the other CheckBoxes to false, back to true. If you add another CheckBox to this group of radio buttons, you will have to add a lot of blocks in lots of different places.
&lt;/p&gt;
&lt;h2 style=&quot;clear:both; padding-top: 50px;&quot;&gt;Step 3. Introducing a Procedure&lt;/h2&gt;
&lt;p&gt;This is the moment where it is handy to use a Procedure to concentrate functionality in one place. Except for the if-then control block, all blocks can be moved to the newly created procedure. Of course identical blocks can then be deleted. You can find the Procedure blocks in the Built-in section of the Blocks pane in the Blocks editor.
&lt;/p&gt;
&lt;p&gt;
Because setting the Checked property of the other CheckBoxes to false (figure 1.5) depends on which CheckBox was pressed, this has to be done conditionally. Therefore the Procedure must know which CheckBox was pressed, which can be realized by adding an input parameter to the procedure (click the small blue square in the upper left corner of the Procedure block to add an input parameter):
&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/3.1_procedure_blocks.jpg&quot; style=&quot;display:block; margin:auto; width: 100%;&quot; /&gt;&lt;br /&gt;&lt;i&gt;Figure 3.1: Procedure blocks&lt;/i&gt;&lt;/p&gt;
&lt;p style=&quot;padding-top: 3em;&quot;&gt;
Yet this is still not a generic situation. In the Procedure we must check for the value of the input parameter to determine for which CheckBoxes the Checked property must be set to false.
&lt;/p&gt;
&lt;p&gt;
Also, if we add another CheckBox later on, the Procedure must be modified to include blocks for the new CheckBox.
&lt;/p&gt;
&lt;h2 style=&quot;clear:both; padding-top: 50px;&quot;&gt;Step 4. Introducing the Any component block&lt;/h2&gt;
&lt;div style=&quot;display: block; margin: auto; width: 100%; padding-bottom: 3em;&quot;&gt;
&lt;div style=&quot;float: left; width: 25%; margin-right: 10%;&quot;&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/4.1_any_component_properties.jpg&quot; style=&quot;width: 100%;&quot; /&gt;&lt;br /&gt;&lt;i&gt;Figure 4.1: Any component properties&lt;/i&gt;
&lt;/p&gt;&lt;/div&gt;
&lt;div style=&quot;float:right; width: 70%;&quot;&gt;
&lt;p style=&quot;padding-top: 3em;&quot;&gt;To implement a generic solution we are going to use the Any component blocks, in our example the Any CheckBox component.
&lt;/p&gt;
&lt;p&gt;
They look like the specific property blocks equivalent, but in addition give you the possibility to specify the component for which you want to set or get a property.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;display: block; margin: auto; width: 100%; padding-bottom: 3em; padding-top: 3em;&quot;&gt;
&lt;div style=&quot;float: left; width: 25%;&quot;&gt;
&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/4.2_component_as_property.jpg&quot; style=&quot;width: 100%;&quot; /&gt;&lt;br /&gt;&lt;i&gt;Figure 4.2: Component as property&lt;/i&gt;
&lt;/div&gt;
&lt;div style=&quot;float:right: width: 70%;&quot;&gt;
&lt;p style=&quot;margin-top: 3em;&quot;&gt;
One property of a component is the component itself. It can be found at the bottom of the list of the component’s event handler and property getters and setters.&lt;/p&gt;
&lt;p&gt;To be able to process all CheckBoxes, we add them to a list (1a) which can be processed by a for-each control block. Adding of the CheckBoxes to the list cannot be done upon initialization of the variable and therefore has to be done upon initialization of the app (1b).
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p style=&quot;clear: both; padding-top: 3em;&quot;&gt;
To let the procedure know which CheckBox it concerns, the CheckBox itself can be passed as parameter (3a and 3b). The if-condition to check if the CheckBox is Enabled has the same structure for all our CheckBoxes, and can now be moved to the Procedure too (2).
&lt;/p&gt;
&lt;p&gt;
The for-each loop (4) returns one CheckBox component from the list at a time and stores it in a local variable. Now we are able to set the Enabled property to false for all CheckBox components in our radio button group in just a single block (5).
&lt;/p&gt;
&lt;p&gt;
Next all Checked properties must be set to false (6b), except for the CheckBox that was pressed (6a).
&lt;/p&gt;
&lt;p&gt;
At last all CheckBoxes must be Enabled.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/4.3_any_component_blocks.jpg&quot; style=&quot;display:block; margin:auto; width: 100%;&quot; /&gt;&lt;i&gt;Figure 4.3: Any component blocks&lt;/i&gt;&lt;/p&gt;
&lt;p style=&quot;padding-top: 3em;&quot;&gt;This powerful combination of a list, for-each loop, Any component blocks and a Procedure gives you the ability to create flexible apps that are easy to modify and expand.&lt;/p&gt;
&lt;h2 style=&quot;clear:both; padding-top: 50px;&quot;&gt;Step 5. Adding another CheckBox&lt;/h2&gt;
&lt;div style=&quot;margin:auto: display: block; width: 100%; padding-bottom: 3em;&quot;&gt;
&lt;div style=&quot;float: left; margin-right: 10px; width: 30%;&quot;&gt;
&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/5.1_design.jpg&quot; style=&quot;width: 100%;&quot; /&gt;&lt;br /&gt;&lt;i&gt;Figure 5.1: Design&lt;/i&gt;
&lt;/div&gt;
&lt;div style=&quot;float: right; width: 65%;&quot;&gt;
&lt;p style=&quot;padding-top: 3em;&quot;&gt;Another CheckBox will be added to the radio button group, to demonstrate the ease of using Procedures and Any component blocks.&lt;/p&gt;
&lt;p&gt;
Adding another CheckBox to the Radio button group now only consist out of a few simple steps. First add the CheckBox to the designer.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p style=&quot;clear: both; padding-top: 3em;&quot;&gt;
In the Blocks Editor you have to add the newly created CheckBox to the list (1) and add its Changed event handler (2). That’s all!
&lt;/p&gt;
&lt;p&gt;
Maybe you noticed that a Checked CheckBox can be unchecked, leaving the radio button group with no selection at all. If you don’t want that to be an option, force the concerning CheckBox to true (3). Prior to this now all CheckBoxes can unconditionally be set to false, which makes our Procedure even easier.
&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/5.2_extra_checkbox_blocks.jpg&quot; style=&quot;display:block; margin:auto; width: 100%;&quot; /&gt;&lt;i&gt;Figure 5.2 Extra CheckBox Blocks&lt;/i&gt;&lt;/p&gt;
&lt;p style=&quot;clear:both; padding-top: 3em;&quot;&gt;Suggestions or questions? Please send an e-mail to   &lt;span id=&quot;7fcabfe4911afec8b5b8fd80ef54fc7b1cfad1d3&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--//--&gt;&lt;![CDATA[// &gt;&lt;!--
 &lt;!--
  document.getElementById(&#039;7fcabfe4911afec8b5b8fd80ef54fc7b1cfad1d3&#039;).innerHTML = &#039;&lt;a href=&quot;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#65;&amp;#73;&amp;#50;&amp;#77;&amp;#77;&amp;#84;&amp;#64;&amp;#103;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&quot;&gt;&amp;#65;&amp;#73;&amp;#50;&amp;#77;&amp;#77;&amp;#84;&amp;#64;&amp;#103;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#46;&amp;#99;&amp;#111;&amp;#109;&#039;;
// --&gt; 
//--&gt;&lt;!]]&gt;
&lt;/script&gt;&lt;p&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-images field-type-image field-label-hidden view-mode-rss&quot;&gt;
    &lt;div class=&quot;field-items&quot;&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/0.1_design.jpg?itok=Tmmiud0q&quot; width=&quot;480&quot; height=&quot;430&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/1.1_straightforward_blocks.jpg?itok=h9S5Ypbv&quot; width=&quot;480&quot; height=&quot;39&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/1.2_press_small.png?itok=3hbGwA3u&quot; width=&quot;270&quot; height=&quot;480&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/1.3_press_medium.png?itok=EQg-Tv9q&quot; width=&quot;270&quot; height=&quot;480&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/1.4_blocks.jpg?itok=T6F9sSDo&quot; width=&quot;480&quot; height=&quot;39&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/2.1_straightforward_blocks.jpg?itok=IcVWmH73&quot; width=&quot;480&quot; height=&quot;102&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/2.2_press_small.png?itok=pFstzV_h&quot; width=&quot;270&quot; height=&quot;480&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/2.3_press_medium.png?itok=k4C_eGf7&quot; width=&quot;270&quot; height=&quot;480&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/2.4_press_medium_again.png?itok=HKvzCrmF&quot; width=&quot;270&quot; height=&quot;480&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/3.1_procedure_blocks.jpg?itok=bFZNOXBc&quot; width=&quot;480&quot; height=&quot;255&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/4.1_any_component_properties.jpg?itok=V_5Bx0zv&quot; width=&quot;450&quot; height=&quot;480&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/4.2_component_as_property.jpg?itok=jParUYtX&quot; width=&quot;353&quot; height=&quot;480&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/4.3_any_component_blocks.jpg?itok=jzPZLRZJ&quot; width=&quot;480&quot; height=&quot;249&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/5.1_design.jpg?itok=obiz--NK&quot; width=&quot;480&quot; height=&quot;430&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/5.2_extra_checkbox_blocks.jpg?itok=iuBF8qKX&quot; width=&quot;480&quot; height=&quot;284&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
      &lt;/div&gt;
&lt;/div&gt;
&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Mon, 25 Jul 2016 15:43:32 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">779 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>Pedometer Component Simplifies Accelerometer Sensor Data</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2016/07</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/interdonato.png&quot; style=&quot;float: left; margin: 2em 10px 0 0; padding: 0; width: 15%;&quot; /&gt;&lt;br /&gt;&lt;i&gt;This is a guest blog post by MIT App Inventor Master Trainer Rich Interdonato.&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;
An online App Inventor course is now being offered by the Department of Health Promotion and Education at the University of Utah.  Like David Wolber&#039;s course at UCSF, it counts as an undergraduate Math credit and may owe some of its popularity to the fact that it provides an immediate way for students to program their smartphones to address core problems in their various majors.  For students in the College of Health, one of these problems is measuring physical activity.
 &lt;/p&gt;
&lt;p&gt;
Pedometers are all the rage today. As people have become ever more interested in &quot;bio-hacking&quot; and collecting &quot;quantified self&quot; data, it seems only natural that measuring physical activity should be of increasing interest too.  In fact, there are a number of companies out there that make wearable devices dedicated to counting your steps for you.  The interest in tracking steps and the wide variety of step counting devices is related to the importance of figuring out how much energy a person expends each day - and ultimately, how much food they should be eating.
  &lt;/p&gt;
&lt;p&gt;
As you can probably imagine, there are a lot of steps required (pun intended) to turn raw motion sensor data into the proper amount of food on someone&#039;s plate.  Even detecting a single step requires making numerous calculations and assumptions, and this can be quite challenging for App Inventors.  Therefore, my intent with this blog post is to review how the current AccelerometerSensor component reports motion data so that you can better appreciate how wonderful the new Pedometer Component really is.  By providing the SimpleStep and WalkStep events, the new Pedometer Component does the “heavy lifting” of step detection for us and makes the creation of simple activity tracking apps possible for everyone.
 &lt;/p&gt;
&lt;h2&gt;AccelerometerSensor Data and Real World Motion&lt;/h2&gt;
&lt;p&gt;
It seems to me that much of the challenge faced by students making their own step counters stems from the fact that until now, they had to use the AccelerometerSensor to detect steps, and that is just plain hard to do well.  In fact, simply understanding how the AccelerometerSensor data relates to forces in the real world is a bit challenging conceptually, and this understanding is essential to making pedometers that work.
  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/phone-axes.png&quot; style=&quot;display:block; margin:auto; width: 90%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;
Modern accelerometer sensors measure forces in three directions, or “along three axes”.   Each axis of measurement, called X, Y, and Z, represent an imaginary line along which the sensor can detect acceleration.  The images above show that each axis has a fixed orientation relative to the accelerometer sensor within the device.  Because the axes are fixed in relation to the device hardware, we know that when there is a positive change in acceleration along the Y axis, the device is moving in whatever direction its TOP is pointing.  When there is a negative change in the Y axis acceleration, then the device is moving in whatever direction its BOTTOM is pointing.  Similarly, when a negative acceleration is detected along the X axis, the device is moving in whatever direction its LEFT side is pointing, and when there is a positive Z axis acceleration, the device is moving in whatever direction its FRONT is facing.
  &lt;/p&gt;
&lt;p&gt;
Almost always, the accelerometer sensor is reporting some combination of X, Y, and Z acceleration values, even when the device is not actually moving.  You see, the force of gravity (9.8 m/s/s) is always acting on earthly objects and it is detected as an acceleration.  In fact, it is only when the device is falling freely that the X, Y, and Z will simultaneously report (nearly) 0 acceleration.  Otherwise, the force of gravity will always be included in the reported acceleration measurements, and because the force of gravity always acts along an imaginary line that runs between the device and the center of the Earth, it is possible to figure out how the device is positioned in space.
  &lt;/p&gt;
&lt;p&gt;
To put this in terms of real objects, consider a device that is placed on a wheeled cart such that its FRONT is facing perfectly up and its BOTTOM RIGHT corner is pointing exactly in the direction that the cart will roll when it is pushed.  At rest, the Z acceleration will be about 9.8 m/s/s because the device detects the force of gravity, and it is in-line with its Z axis.  The X and Y axes do not detect any acceleration at this time because they are perpendicular to the force of gravity and the table is not moving.  However, once the table is pushed, notice how the acceleration values change.  The Z acceleration remains the same because gravity continues to act on the device as before.  However, since the Y axis points in a somewhat opposite direction from the rolling cart, it will report a negative acceleration value, and since the X axis is pointed somewhat in-line with the rolling cart, it will report a positive acceleration.  Based on the values obtained from the accelerometer, it is possible to determine not only how the device is accelerating, but also how it is positioned.  That is until the cart comes to a sudden stop and the device slides off and starts to fall.  Then the X, Y, and Z accelerations all become 0 and we are out of luck.
  &lt;/p&gt;
&lt;h2&gt;Counting Steps in App Inventor&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/interdonato-block1.png&quot; style=&quot;display:block; margin:auto; width: 40%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;You might guess that the process of decoding the AccelerometerSensor.AccelerationChanged event parameters into &quot;real&quot; steps is no a trivial matter – and you would be right.  In fact, it offers an example of an ongoing technical challenge that is open to much innovation and debate, even at the professional level.  If you have ever &quot;fooled&quot; a pedometer with non-walking motion, then you have demonstrated just how difficult this problem is, and why App Inventor&#039;s new Pedometer Component is so handy.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/interdonato-block2.png&quot; style=&quot;display:block; margin:auto; width: 30%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;
To greatly simplify things, the new Pedometer Component provides two events; SimpleStep and WalkStep.  The difference between the two is that the WalkStep event is only triggered when a SimpleStep appears to be associated with forward motion.  For activity tracking apps, this is an important, and maybe critical distinction.  What is more, the events return not only the number of steps detected since the Pedometer Component was started, but also the distance travelled by the walker, based on the StrideLength property that can be set for the component.
 &lt;/p&gt;
&lt;p&gt;
Even with the &quot;heavy lifting&quot; of step detection that is provided by the new Pedometer Component, there are still plenty of other &quot;problems&quot; to solve when making your own step counting apps.  For example, accurately setting the stride length is an interesting problem that you might decide to tackle in you next App Inventing session.  Perhaps you might have your users walk some known distance and then figure out how many steps they took to do so, allowing you to compute a more accurate StrideLength.  Maybe you might like to use the GPS on the device and actually measure the distance travelled by the walker as part of a &quot;calibration routine&quot;.  Maybe you will think that the StrideLength should be dynamically adjusted as a person uses the app over time, such that the app &quot;learns&quot; what the correct average value should be?  As you can see, when it comes to accurately measuring human activity, there are plenty of technical challenges.  Fortunately, App Inventor&#039;s new Pedometer Component takes care of much of the burden of step counting for us.&lt;b&gt;  Thank you M.I.T.!&lt;/b&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-images field-type-image field-label-hidden view-mode-rss&quot;&gt;
    &lt;div class=&quot;field-items&quot;&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/phone-axes.png?itok=29eddvJM&quot; width=&quot;480&quot; height=&quot;233&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/interdonato-block1.png?itok=jrARu7n3&quot; width=&quot;480&quot; height=&quot;112&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/interdonato-block2.png?itok=ZBAuzDd5&quot; width=&quot;412&quot; height=&quot;313&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
      &lt;/div&gt;
&lt;/div&gt;
&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Wed, 20 Jul 2016 16:16:32 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">773 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>2016 Google CS4HS Shenzhen </title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2016/07/2016</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/chen.png&quot; style=&quot;float: left; margin-right: 10px; width: 15%;&quot; /&gt;&lt;i&gt;This is a guest blog by MIT App Inventor Master Trainer Xiangqun Chen.&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;My three-day CS4HS workshop was held in June. More than 40 teachers came to have the training. Most of them are novices on App Inventor.&lt;/p&gt;
&lt;p&gt;
Two weeks before the workshop, I began to recruit participants.  Even though we don&#039;t offer credits for the training, a lot of teachers applied for the training. Many participants are core teachers of Shenzhen, and also included our discipline instructor and researcher for the Shenzhen Education Bureau.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/shenzhen-group.jpg&quot; style=&quot;display:block; margin:auto; width: 100%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;
I established an online course in advance. After recruiting, I let all participants enroll in the course so they can begin to study immediately.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/mooc_merge2.jpg&quot; style=&quot;display:block; margin:auto; width: 40%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;On the first morning of training, a freshman of Shenzhen Institute of Information Technology showed how to control a drone with a mobile phone; the app was created with custom features of App Inventor that he developed by himself. Fantastic!
&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/shenzhen-student.jpg&quot; style=&quot;display:block; margin:auto; width:50%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The next three days, I trained teachers on Computational Thinking, Setting Up App Inventor, How to open an App Inventor course in your own lab, Designer and Blocks Editor, Packaging and Sharing Apps, Lego and Arduino with App Inventor, including some interesting tutorials.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/chen_teaching.jpg&quot; style=&quot;display:block; margin:auto; width: 70%;&quot; /&gt;&lt;/p&gt;
&lt;p style=&quot;text-align: center&quot;&gt;Teachers making their own apps.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/teacher_learning1.jpg&quot; style=&quot;display:block; margin:auto; width: 80%;&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/teacher_learning2.jpg&quot; style=&quot;display:block; margin:auto; width: 80%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Everyone was required to make a final project, and were allowed to collaborate with other teachers. On the last day, they presented their work : UI, Codes, Features, Improvement, Creative Ideas, all well done!&lt;/p&gt;
&lt;div style=&quot;width: 100%; margin:auto; padding:0; display:block;&quot;&gt;
&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/teacher_showing1.jpg&quot; style=&quot;float: left; margin: 0; padding:0; width: 49%;&quot; /&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/teacher_showing2.jpg&quot; style=&quot;float: left; margin: 0; padding:0; width: 49%;&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/teacher_showing3.jpg&quot; style=&quot;float: left; margin: 0; padding:0; width: 49%;&quot; /&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/teacher_showing4.jpg&quot; style=&quot;float: left; margin: 0; padding:0; width: 49%;&quot; /&gt;&lt;/div&gt;
&lt;p&gt;
After the training, the teachers completed a survey about the workshop. The feedback is quite good. And they also gave me a lot of suggestions for improving the workshop. I&#039;m so appreciative of that.
&lt;/p&gt;
&lt;p&gt;
In the future, I would make a connection with Shenzhen Education Bureau and let more teachers take part in further training.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Thu, 14 Jul 2016 14:58:45 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">770 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>New Release Features Extensions, Bluetooth LE &amp; LEGO EV3</title>
 <link>http://explore.appinventor.mit.edu/blogs/josh/2016/06/new</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;Late the evening of June 15, EDT, the MIT App Inventor team pushed a significant component release to its live, public-facing main instance. &lt;a href=&quot;https://docs.google.com/document/d/1x6WvQPEZblkrhfroO5q3vbNKiaWyaWGB58r5Se2H8Q4/pub&quot;&gt;More information about the release is available.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/all/files/blogs/Intel_logo.png&quot; align=&quot;right&quot; /&gt;This release enables extension components, which for now are non-visible components only, which may be written by anyone (with sufficient Java know-how) and then used with the MIT App Inventor service, without cluttering the component palettes for other users.&lt;/p&gt;
&lt;p&gt;The first officially recognized &amp;amp; supported extension component is a Bluetooth Low Energy (BLE) component, generously made possible in part by a grant given by the &lt;a href=&quot;http://www.intel.com/content/www/us/en/education/university/intel-university-program.html&quot;&gt;University Program Office at Intel Corporation&lt;/a&gt;. The BLE component will enable Internet of Things (IoT) applications, many of which will come from our community: we expect to be blown away by amazing examples!&lt;/p&gt;
&lt;p&gt;Additionally, we are happy to announce and release LEGO EV3 components, generously shared with the wider community by &lt;a href=&quot;http://www.cavedu.com/&quot;&gt;CAVEDU&lt;/a&gt;, a robotics and computer education organization based in Taiwan, and workplace of Master Trainer David Tseng.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Thu, 16 Jun 2016 19:47:04 +0000</pubDate>
 <dc:creator>Josh</dc:creator>
 <guid isPermaLink="false">758 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>New App Inventor for Educators Site Launched</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2016/06/new</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/aieducators.png&quot; style=&quot;float: left; margin-right: 10px; width: 40%;&quot; /&gt;In an effort build a productive and positive educational community around the use of MIT App Inventor, a new website has now launched. &lt;a href=&quot;http://teach.appinventor.mit.edu&quot;&gt;teach.appinventor.mit.edu&lt;/a&gt; is a site where educators can share ideas, search and post resources, and ask questions about App Inventor. Due to the number and wide range of users for App Inventor, the main App Inventor site can be overwhelming and hard to navigate when specifically looking for educational content. If you are an educator who uses App Inventor and would like to join our community, please go to the site, register, and join the conversation!&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-images field-type-image field-label-hidden view-mode-rss&quot;&gt;
    &lt;div class=&quot;field-items&quot;&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/aieducators.png?itok=sc4yPBlY&quot; width=&quot;300&quot; height=&quot;86&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
      &lt;/div&gt;
&lt;/div&gt;
&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Mon, 13 Jun 2016 20:42:14 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">756 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>Guangzhou Education Information Center(GEIC) Stages App Inventor Robot Contest</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2016/06</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;i&gt;This is a guest blog by Zanjian Li, from the GuangZhou Education Information Center&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;On May 8th, the “Robot Competition for Primary school and Secondary School Students of Guangzhou 2016” was successfully held by the Guangzhou Education Information Center (GEIC). 305 teams from 166 schools participated in the competition. The competition consisted of 15 different programs, such as App Inventor Robot Contest, Robot Designing, FIRST LEGO League(FLL), Robot Football, Robot Basketball etc.&lt;/p&gt;
&lt;div style=&quot;padding:0; margin:0; width: 100%&quot;&gt;
&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/china-robots1.jpg&quot; style=&quot;float: left; width: 48%;&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/china-robots3.jpg&quot; style=&quot;float: left; position: relative; top: -20px; width: 48%;&quot; /&gt;&lt;/div&gt;
&lt;p&gt; The highlight of the competition was the App Inventor Robot Contest, which was designed by GEIC and was the first contest combining App Inventor and robotic technology in China. &lt;/p&gt;
&lt;p&gt;The theme of the contest game was “Getting the treasures on the map”. In the game, the players needed to assemble a small robot without a controller, design a controller app using App Inventor, download and install it onto a cellphone, then fix the cellphone on the robotic chassis, to make a fully working robot. The cellphone directed had to execute the task automatically, including finding the path on the map by color blocks, searching for the QR code(treasure), scanning it, and sending the scanning result to the cellphone of judges.&lt;/p&gt;
&lt;div style=&quot;padding:0; margin:0; width: 100%&quot;&gt;
&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/china-robots4.jpg&quot; style=&quot;float: left; width: 48%;&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/china-robots2.jpg&quot; style=&quot;float: left; position: relative; top: -20px; width: 48%;&quot; /&gt;&lt;/div&gt;
&lt;p&gt;The Contest is a part of plan by GEIC to promote the use of App Inventor in China. GEIC spent months in preparation for the App Inventor Robot Contest; they  saw the contest as one of the follow-up measures from the Memorandum of Understanding between MIT and South China University of Technology (SCUT) signed in 2015, and hopes 0the contest will be a good example for other cities.  The contest also drew the interest of several news media outlets in China -  the Guangdong TV station and some local newspapers reported on the contest.&lt;/p&gt;
&lt;p&gt;  5月8日， 由广州市教育信息中心组织的“2016年广州市中小学电脑机器人竞赛活动”成功举办，共有来自166所学校的305支队伍参加了本次竞赛，竞赛共包括15个项目：如App Inventor机器人竞赛、机器人设计、乐高机器人、机器足球、机器人篮球等。&lt;/p&gt;
&lt;p&gt; 本次竞赛的亮点在于“App Inventor机器人竞赛”项目，这一项目由广州市教育信息中心设计，是国内首内结合App Inventor和机器人技术的区域性竞赛活动。&lt;/p&gt;
&lt;p&gt;　竞赛的主题为“地图寻宝”，在竞赛过程中，选手们需要组装一台没有控制器的小型机器人，在App Inventor平台上进行程序设计，安装到一台手机上，再把手机固定到机器人上，使其成为机器人的控制器。这一台携带手机的机器人将自动完成竞赛任务，包括在搭载手机在地图上通过判断颜色寻找路径、搜索和查找二维码（宝藏）、把二维码发送到裁判手机上等。&lt;/p&gt;
&lt;p&gt; 本次竞赛是广州市教育信息中心推动App Inventor在全国应用的计划的一部分，已准备了数月，并将其视为去年与MIT及华南理工大学签订合作备忘录的后续动作之一，并希望这一竞赛为其它城市起到示范作用。本次活动还吸引了不少新闻媒体，广东电视台和几家报纸对其进行了报导。&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-images field-type-image field-label-hidden view-mode-rss&quot;&gt;
    &lt;div class=&quot;field-items&quot;&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/china-robots1.jpg?itok=TqK80WWU&quot; width=&quot;480&quot; height=&quot;356&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/china-robots2.jpg?itok=0mA4rJcl&quot; width=&quot;480&quot; height=&quot;356&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/china-robots3.jpg?itok=PBvKr8JX&quot; width=&quot;480&quot; height=&quot;356&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/china-robots4.jpg?itok=dW-KNjC-&quot; width=&quot;480&quot; height=&quot;356&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
      &lt;/div&gt;
&lt;/div&gt;
&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Fri, 03 Jun 2016 16:04:35 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">752 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>Integrating MIT App Inventor into Hoa Sen University IT Curriculum</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2016/05-2</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/nguyen.png&quot; style=&quot;float: left; margin-right: 10px; width: 15%;&quot; /&gt;&lt;i&gt;This is a guest blog post by MIT App Inventor Master Trainer Khoi Nguyen Tran Minh, a lecturer at Hoa Sen University, Vietnam&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;
It is good news that after attending the MIT Master Trainers Program in Educational Mobile Computing, I am able to persuade my senior managers at The Faculty of Science and Technology, Hoa Sen University, Vietnam to introduce a new course, Introduction CS Principles with MIT App Inventor, into our IT curriculum. We developed our course based on &lt;a href=&quot;http://www.mobile-csp.org/&quot; target=&quot;_blank&quot;&gt;Mobile CSP&lt;/a&gt;, which focuses on building mobile apps with MIT App Inventor and is among &lt;a href=&quot;http://apcsp.org/index.php/courses&quot; target=&quot;_blank&quot;&gt;five pilot courses&lt;/a&gt; fully addressing the AP Computer Science Principles Curriculum Framework components. &lt;/p&gt;
&lt;p&gt;
The approval is mainly based on the fact that nearly 100 US colleges and universities have considered the CS Principles Framework as a &lt;a href=&quot;https://advancesinap.collegeboard.org/stem/computer-science-principles/higher-ed-support&quot; target=&quot;_blank&quot;&gt;college-level computing course&lt;/a&gt;. As a matter of fact, many of them have &lt;a href=&quot;http://www.csprinciples.org/home/pilot-sites&quot; target=&quot;_blank&quot;&gt;piloted a program&lt;/a&gt; to teach Seven Big Ideas and the Six Computational Thinking Practices to university students.&lt;/p&gt;
&lt;p&gt;
While MIT App Inventor has been utilised as a tool for many CS principles courses, it appears to me that it has potential for a great deal of other subjects, especially Data Structures and Algorithms. Take “The Tower of Hanoi” app (with &lt;a href=&quot;https://drive.google.com/folderview?id=0B8MPX-KrJRMuRFRDQVFFSXhmMDQ&amp;amp;usp=sharing&quot; target=&quot;_blank&quot;&gt;tutorial&lt;/a&gt;) in the &lt;a href=&quot;ai2.appinventor.mit.edu/?galleryId=6007560209694720&quot; target=&quot;_blank&quot;&gt;App Inventor Gallery&lt;/a&gt; and &lt;a href=&quot;https://play.google.com/store/apps/details?id=appinventor.ai_khoi_ntm.TheTowerofHanoi_Final&quot; target=&quot;_blank&quot;&gt;Google Play&lt;/a&gt; as an example. I developed this app to push MIT App Inventor beyond its comfort zone and saw that it has the capability to develop complicated apps as easy as any text-based programming language, if not more conveniently and in less time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/tower-of-hanoi.png&quot; style=&quot;display:block; margin:auto; width: 80%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Additionally, I was able to use MIT App Inventor to complete all &lt;a href=&quot;https://drive.google.com/file/d/0B8MPX-KrJRMua2I1R0dVVUlyYlE/view?usp=sharing&quot; target=&quot;_blank&quot;&gt;week 2 assignments&lt;/a&gt; of the &lt;a href=&quot;https://www.coursera.org/learn/algorithmic-toolbox&quot; target=&quot;_blank&quot;&gt;Coursera Algorithmic Toolbox&lt;/a&gt;, course 1 of 6 in the Data Structures and Algorithms Specialization. Here are the links to the apps in the Google Play:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=appinventor.ai_khoi_ntm.Fibonaccinumber_Final&amp;amp;hl=en&quot; target=&quot;_blank&quot;&gt;Compute a huge Fibonacci number&lt;/a&gt; (0 ≤ n ≤ 10&lt;sup&gt;4&lt;/sup&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/fibonacci-sequence.png&quot; style=&quot;display:block; margin:auto; width: 60%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=appinventor.ai_khoi_ntm.Last_Digit_of_a_Huge_Fibonacci_Number&quot; target=&quot;_blank&quot;&gt;Compute the last digit of a large Fibonacci number&lt;/a&gt; (0 ≤ n ≤ 10&lt;sup&gt;7&lt;/sup&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/fibonacci-lastdigit.png&quot; style=&quot;display:block; margin:auto; width: 60%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=appinventor.ai_khoi_ntm.Fibonacci_Mod_M&quot; target=&quot;_blank&quot;&gt;Compute a huge Fibonacci number modulo m&lt;/a&gt; (0 ≤ n ≤ 10&lt;sup&gt;18&lt;/sup&gt; 2 &amp;amp;le m &amp;amp;le 10&lt;sup&gt;5&lt;/sup&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/huge-fibonacci.png&quot; style=&quot;display:block; margin:auto; width: 60%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=appinventor.ai_khoi_ntm.The_greates_common_divisor_of_two_integers&quot; target=&quot;_blank&quot;&gt;Compute the greatest common divisor of two integers&lt;/a&gt; (1 ≤ a, b ≤ 2 * 10&lt;sup&gt;9&lt;/sup&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/gcd.png&quot; style=&quot;display:block; margin:auto; width: 60%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://play.google.com/store/apps/details?id=appinventor.ai_khoi_ntm.The_least_common_multiple_of_two_integers_Final&quot; target=&quot;_blank&quot;&gt;Compute the least commond multiple of two integers&lt;/a&gt; (1 ≤ a, b ≤ 2 * 10&lt;sup&gt;9&lt;/sup&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/lcd.png&quot; style=&quot;display:block; margin:auto; width: 60%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;
Admittedly, these problems are not hard to solve. However, the obstacle is how long it would take to calculate huge numbers, such as the 10,000th Fibonacci number or the last digit of the 1,000,000,000th one. While a carefully-designed algorithm can solve these problems within seconds, its not-so-good counterparts can take hundred or thousand years to complete the computation.&lt;/p&gt;
&lt;p&gt;Not surprisingly, I found that MIT App Inventor is a kind of pseudocode which is intended for human reading, yet it still delivers a fully functional app with a variety of algorithms without any difficulties at all. It is my goal to use MIT App Inventor to produce more algorithm-related apps before writing a book titled “Data Structures and Algorithms with MIT App Inventor”.&lt;/p&gt;
&lt;p&gt;
Intelligent Tutoring System is a field that I really want to explore further with AI2 and hopefully can I demo my app in the Summit in June. In the meantime, I will post some information about it in my next article.&lt;/p&gt;
&lt;p&gt;I would love to receive feedback as well as comments and can be reached at   &lt;span id=&quot;7fcabfe4911afec8b5b8fd80ef54fc7b1cfad1d3&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;script type=&quot;text/javascript&quot;&gt;
&lt;!--//--&gt;&lt;![CDATA[// &gt;&lt;!--
 &lt;!--
  document.getElementById(&#039;7fcabfe4911afec8b5b8fd80ef54fc7b1cfad1d3&#039;).innerHTML = &#039;&lt;a href=&quot;&amp;#109;&amp;#97;&amp;#105;&amp;#108;&amp;#116;&amp;#111;&amp;#58;&amp;#107;&amp;#104;&amp;#111;&amp;#105;&amp;#46;&amp;#110;&amp;#103;&amp;#117;&amp;#121;&amp;#101;&amp;#110;&amp;#116;&amp;#114;&amp;#97;&amp;#110;&amp;#109;&amp;#105;&amp;#110;&amp;#104;&amp;#64;&amp;#104;&amp;#111;&amp;#97;&amp;#115;&amp;#101;&amp;#110;&amp;#46;&amp;#101;&amp;#100;&amp;#117;&amp;#46;&amp;#118;&amp;#110;&quot;&gt;&amp;#107;&amp;#104;&amp;#111;&amp;#105;&amp;#46;&amp;#110;&amp;#103;&amp;#117;&amp;#121;&amp;#101;&amp;#110;&amp;#116;&amp;#114;&amp;#97;&amp;#110;&amp;#109;&amp;#105;&amp;#110;&amp;#104;&amp;#64;&amp;#104;&amp;#111;&amp;#97;&amp;#115;&amp;#101;&amp;#110;&amp;#46;&amp;#101;&amp;#100;&amp;#117;&amp;#46;&amp;#118;&amp;#110;&#039;;
// --&gt; 
//--&gt;&lt;!]]&gt;
&lt;/script&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-images field-type-image field-label-hidden view-mode-rss&quot;&gt;
    &lt;div class=&quot;field-items&quot;&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/tower-of-hanoi.png?itok=T9mEfol1&quot; width=&quot;480&quot; height=&quot;175&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/fibonacci-sequence.png?itok=FMKG-b7G&quot; width=&quot;470&quot; height=&quot;237&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/fibonacci-last-digit.png?itok=bGWkFlzI&quot; width=&quot;480&quot; height=&quot;181&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/huge-fibonacci.png?itok=dkREDyCH&quot; width=&quot;480&quot; height=&quot;245&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/lcd.png?itok=aYzcHqet&quot; width=&quot;469&quot; height=&quot;243&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/gcd.png?itok=1NobvU6s&quot; width=&quot;478&quot; height=&quot;253&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/fibonacci-lastdigit.png?itok=V1yvIXBg&quot; width=&quot;480&quot; height=&quot;269&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
      &lt;/div&gt;
&lt;/div&gt;
&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Fri, 27 May 2016 12:52:04 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">749 at http://explore.appinventor.mit.edu</guid>
</item>
</channel>
</rss>
