<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xml:base="http://explore.appinventor.mit.edu"  xmlns:dc="http://purl.org/dc/elements/1.1/">
<channel>
 <title>Explore MIT App Inventor blogs</title>
 <link>http://explore.appinventor.mit.edu/blog</link>
 <description></description>
 <language>en</language>
<item>
 <title>Challenges and tips for teaching a large coding class</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2017/02</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/zhou.jpeg&quot; style=&quot;float: left; margin-right: 10px; width: 15%;&quot; /&gt;&lt;i&gt;This is a guest blog by MIT Master Trainer Anqi Zhou.&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;During summer 2016, I had the opportunity to teach App Inventor to classes of 30 beginners aged 10 - 12 in Beijing. It was exciting to bring the power of coding to so many young persons, but even with three teaching assistants in the room, it was a tough experience.&lt;/p&gt;
&lt;p&gt;With a limited number of programming teachers available at present, finding ways to effectively teach a large class is important in bringing programming to more students. In this post, I am going to share the challenges and tips I gathered from the teaching experience.&lt;/p&gt;
&lt;h2&gt;Debugging, distraction and diverse capabilities are key challenges&lt;/h2&gt;
&lt;p&gt;Firstly, anyone who teaches programming can tell you that “my program is not working” is the most frequently heard phrase in the classroom. Unlike in a maths classroom, where a definite answer can be easily given to most questions, to give an answer to “my program is not working” usually requires timeout for individual attention and teaching experience. Maybe it’s a specific spelling error somewhere, maybe it’s Internet connection issues, maybe it’s anti-virus software going crazy, maybe it’s just a slow computer, the list goes on. When you are responsible for more than six students, you’d probably be rushing around and putting out fires everywhere.&lt;/p&gt;
&lt;p&gt;Secondly, working on a computer opens a world of distraction to students - websites, links, emails, games, videos and whatnot. The larger the class size, the more difficult it is to keep everyone on track and keep the show moving on.&lt;/p&gt;
&lt;p&gt;Adding to the complication is that students usually come with a diverse range of capabilities. Some would take five minutes to download and locate a picture and some only type with index fingers. The students more familiar with basic computer skills are prone to distraction while the slower ones may fall behind the classroom flow.&lt;br /&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/appinventor-classroom.png&quot; style=&quot;display:block; margin:auto; width: 60%;&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;10 Tips for teaching a large class&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1) One machine per student if possible&lt;/strong&gt;&lt;br /&gt;
Sharing machines by design inevitably sends a subtle message that not everyone needs to be fully engaged at all times. Even though we do need to include elements of teamwork and pair programming in our class, it’s still better to give each person a machine to be responsible for, otherwise it’s easy to see at least half of the students with wandering minds.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2) Prepare the machines&lt;/strong&gt;&lt;br /&gt;
That includes charging and downloading relevant software ahead of time. You would not want to have many students sharing a limited number of power outlets located in awkward positions in the room nor fighting for Internet bandwidth during your class.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3) Good student monitoring software&lt;/strong&gt;&lt;br /&gt;
Especially the kind that allows you to remotely control a student’s screen and bring it up for the whole class to see. When a student gives you a bug alert, chances are, some other students are probably experiencing similar problems. Helping one student remotely debug and projecting the process to the whole class would make the debugging processes more efficient.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4) Allow students to go at their own pace if needed&lt;/strong&gt;&lt;br /&gt;
Since it’s easy for students to fall into different paces, it’s helpful to prepare a worksheet, a book or a web page of classroom materials, so that faster students can challenge themselves ahead while students who take more time can go at their comfortable pace.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5) Prepare different questions to challenge on various dimensions&lt;/strong&gt;&lt;br /&gt;
Students have different strengths, some understand concepts well, some program very fast, and some are more artistic. Apart from programming challenges, I’d also prepare design challenges in each lesson, so that a student who programs fast can be engaged while a student who struggles with code can have opportunities to easily contribute ideas.&lt;/p&gt;
&lt;p&gt;Here are some examples:&lt;br /&gt;
How would you change the chat app you programmed if the users are primary school students? How would you change it if the users are the elderly?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6) Warm up exercises for basic computer skills&lt;/strong&gt;&lt;br /&gt;
If students come from different basic computer skill levels, it’s worthwhile giving them some warmup exercises to save teachers class time explaining computer basics. A typing race or downloading and saving a specific fun picture can work wonders as an ice-breaker game.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7) Set definite and visible time limits for each task&lt;/strong&gt;&lt;br /&gt;
Unless it’s a designated period of free exploration, I’d usually set a time limit for each task, such as downloading a picture or drawing a sprite, with a visible countdown timer. It’s a way to make it clear that we will stop and move on together when the time is up.  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/classroom-timer.png&quot; style=&quot;display:block; margin:auto; width: 80%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8) Reward good teamwork&lt;/strong&gt;&lt;br /&gt;
In a large class, I think it’s worthwhile getting the students who program faster to act as your teaching assistant. The upside is that they can solidify their understanding by helping others, and the downside is that young students tend to help by doing rather than by teaching and explaining. I would pre-assign students into various teams and give clear rewards to the teams that not only finish the challenges but also are best at explaining what they have done.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9) Prepare a FAQ sheet&lt;/strong&gt;&lt;br /&gt;
I would prepare a sheet of FAQs for any lesson to screen common and easy-to-fix bugs. When students encounter a bug, they can check the FAQs first.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10) Make sure students know why they are here&lt;/strong&gt;&lt;br /&gt;
The last one applies to any class size really. It’s vital for students to understand why they are learning and better to make sure they want to be here. It never hurts to repeat their goals and what they need to do to achieve them frequently. A large class of unmotivated students with access to computers is a recipe for disaster.&lt;/p&gt;
&lt;p&gt;Teaching a large class is challenge but necessary work as educators. I hope you find my tips helpful!&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-images field-type-image field-label-hidden view-mode-rss&quot;&gt;
    &lt;div class=&quot;field-items&quot;&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/appinventor-classroom.png?itok=OsvkrNVg&quot; width=&quot;415&quot; height=&quot;277&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/classroom-timer.png?itok=pzEP1FyO&quot; width=&quot;480&quot; height=&quot;187&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
      &lt;/div&gt;
&lt;/div&gt;
&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Tue, 07 Feb 2017 23:11:41 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">854 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>Technovation 2017 Workshop at MIT</title>
 <link>http://explore.appinventor.mit.edu/blogs/josh/2017/02</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;On Saturday, January 23, 100+ people attended the MIT App Inventor session  at the Stata Center at MIT to prepare for Technovation 2017. Huge thanks to the rest of the App Inventor team, including Lisa Yuan, Mike Tissenbaum, Paul Medlock-Walton, Jane Im &amp;amp; Marisol Diaz for their parts in making the day go so well. Special thanks too, to Rachel Nicoll and the others from MassTLC Ed Foundation for their help organizing the event, and many others to make Technovation in Massachusetts a success. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/technovation-jan17.jpg&quot; style=&quot;float: right; margin-left 10px; width: 45%;&quot; /&gt;Feedback from 2016 told us that we should run several different levels of App Inventor sessions, not just one advanced session. So, this year, the sessions included a beginner and advanced session, to accommodate different amounts of experience with App Inventor. This, we hypothesized, would let attendees take away the more from the morning.&lt;/p&gt;
&lt;p&gt;As it turned out, with both sessions running concurrently, people could move between them as they felt necessary, which people did quite willingly and without hesitation. An improvement for next year, though, would be to offer descriptions of each level ahead of time. The descriptions should include a description of the range of experiences, if any, needed for any session.&lt;/p&gt;
&lt;p&gt;A small puzzle for future years remains, however. How can we appropriately differentiate within a session room for a group that you&#039;ve never met before and may never meet again, that have very different experience levels, especially in the beginners session. A possible, partial solution, would be to have a very short survey ahead of time, asking 2 or 3 questions about programming experience.&lt;/p&gt;
&lt;p&gt;Another interesting observation was that there were big differences between adult and youth comfort learning programming. True to form, adults were generally less comfortable not knowing things and just exploring, compared to kids who were willing to jump in and try different things without fear of breaking things. As well, teachers and non-teachers behaved differently. Teachers recognized they were there to facilitate and seemed to feel less worry about how much they did or didn&#039;t understand.  &lt;/p&gt;
&lt;p&gt;In the beginner room, most participants picked up programming with MIT App Inventor really quickly. This allowed time for teams to have the opportunity to share app ideas and then receive feedback from the room. Feedback came both on concept, and on how you might start planning implementations of some parts of the planned app with MIT App Inventor. &lt;/p&gt;
&lt;p&gt;This feedback opportunity brought to light an idea, namely that good apps do need good programming, but that programming can often be the &quot;easy&quot; part. Another part that is often considered secondary, but often has even more impact than the programming is the social or information system that&#039;s built around the app. For example, an anti-bullying app to allow reporting of incidents may require some programming, but requires much more focus on the social engineering, or providing the right incentives to each group of users to use the app. A drought monitoring app requires programming, but more focus on where to get the information needed to inform stakeholders, i.e. app users, about the state of watersheds. &lt;/p&gt;
&lt;p&gt;As the Technovation teams move forward with their ideas and coding of their apps, we hope that they, with the help of their mentors, will work to build the systems needs to make their apps and pitches successful and impactful in the world.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-images field-type-image field-label-hidden view-mode-rss&quot;&gt;
    &lt;div class=&quot;field-items&quot;&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/technovation-jan17.jpg?itok=B1y9c8EW&quot; width=&quot;480&quot; height=&quot;360&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
      &lt;/div&gt;
&lt;/div&gt;
&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Tue, 07 Feb 2017 21:27:19 +0000</pubDate>
 <dc:creator>Josh</dc:creator>
 <guid isPermaLink="false">853 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>My Experience at the App Inventor Summit</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2017/01/my</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;i&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/lim.png&quot; style=&quot;float: left; margin-right: 10px; width: 15%;&quot; /&gt;This is a guest blog by MIT Master Trainer Yen Yen Lim&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;My blog will focus on a couple of presentations I watched as an attendee, and my experience as a hackathon judge at the App Inventor Summit in MIT Media Lab on June 22-24, 2016. &lt;/p&gt;
&lt;p&gt;I was fascinated by one of the presentations. It showcased an app created by a customized App Inventor which sent live data to iSense (&lt;a href=&quot;http://www.isenseproject.org&quot; target=&quot;_blank&quot;&gt;www.isenseproject.org&lt;/a&gt;) which is an online collaborative data visualization system. Through the system, the data fed to iSense was then transformed into a colorful graphical chart on the website. This App Inventor project, Creating Data-Rich Projects in App Inventor with AppVis, was presented by 3 college students, Fred Martin &amp;amp; Farzeen Harunani from UMass Lowell, and Samantha Michalka from Olin College. The presentation slides can be found &lt;a href=&quot;https://docs.google.com/presentation/d/11WNYx4UIRwj3h_YIvnQ5jNQpsCHUj9UpIQpHcalZvvU/edit#slide=id.g114941b1bd_0_238 target=&quot; _blank=&quot;&quot;&gt;here&lt;/a&gt;.  The group has created iSense-enabled versions of App Inventor and its App companion. The App Inventor IDE is located at &lt;a href=&quot;http://ai.cspathways.org&quot; target=&quot;_blank&quot;&gt;ai.cspathways.org&lt;/a&gt;.  And, its App Inventor companion can be scanned via a QR code by clicking “Help” and then “Companion Information” on ai.cspathways.org, or downloaded from &lt;a href=&quot;http://bit.ly/appviscomp&quot; target=&quot;_blank&quot;&gt;bit.ly/appviscomp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I also learned that the newest release of App Inventor includes a new feature, Bluetooth Low Energy, which allows mobile apps to control Bluetooth-low-energy enabled devices. Jose Gomez-Marquez and Andrew McKinney, from MIT, demonstrated its usage.&lt;/p&gt;
&lt;p&gt;During the summit, I also had the opportunity to be one of the 4 judges for the kids’ hackathon.  It was an interesting event where the kids were given a task to create an app to address any problem pertaining to environmental science, ecology, or human ecology. The app was judged on the following criteria in decreasing merit: the theme of the app, the feasibility of implementing the idea on the mobile, the originality of the idea, the user-interface of the app, the coding of the app, and the group oral presentation of their idea.  In order to encourage the use of the various mobile components that App Inventor supports, additional points were awarded based on the number of components being utilized in the apps:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Media: player, sound, text to speech, camera, camcorder, image, etc. &lt;/li&gt;
&lt;li&gt;Sensors: clock, location, orientation, NFC, accelerometer, pedometer, etc.&lt;/li&gt;
&lt;li&gt;Social: email, texting, photos, sharing, Twitter, use of contact list&lt;/li&gt;
&lt;li&gt;Storage: fusion tables, files, Tiny DB, Firebase DB&lt;/li&gt;
&lt;li&gt;Connectivity: Bluetooth, web, activity starter, etc.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Fri, 27 Jan 2017 02:29:18 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">850 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>Teaching Maths App Project</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2017/01-0</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;i&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/lam.png&quot; style=&quot;float: left; margin-right: 10px; width: 15%;&quot; /&gt;This is a guest blog by MIT Master Trainer Carly Lam.&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;Maths Survival Game Project involves creating a mobile game with MIT App Inventor that upon starting, will prompt maths questions to pop up on the screen, which the player will have to answer. There will be a timer that limits the amount of time given to the player to answer the questions correctly. Incorrect answers or answers not submitted in time will cause the player to lose one ‘life’ out of three ‘lives’. Upon losing all ‘lives’, the player will be shown a small pop up screen that informs of the player’s loss, and a button that allows the game to be restarted. When one answer is submitted correctly, the player will be awarded one point, and these points will add up under the player’s High Score. &lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/maths-app.png&quot; style=&quot;float: right; margin-left: 10px; margin-top: 5px; width: 25%; border: 1px solid grey;&quot; /&gt;The player will also be congratulated when a new High Score has been reached. The aim of this game is to speed up user’s arithmetic skills such as solving multiplication, division, addition and subtraction under time pressure.&lt;br /&gt;&lt;/p&gt;&lt;h3&gt;The Learning Goals of the Project&lt;/h3&gt;
&lt;p&gt;In this Maths Game Project, the learning goal we have set up for the students is mainly the ability to learn and apply knowledge. We introduce the students to programming concepts including variables, database storage, random generators, and incrementation. They have to apply these to their game through effective and strategic planning to build this fun, educational, and most importantly, functional game.&lt;/p&gt;
&lt;p&gt;Students explore cause and effect within this program. They must designate each button to a purpose that it must serve. For example, having a button to generate a question, a number, or to take the player to a different screen. Timers are something else that they had to work with. They must program the computer to recognise at what interval would the player have failed the question and lost a ‘life’, whether they have plenty or just enough time, and to behave to these conditions appropriately.&lt;/p&gt;
&lt;h3&gt;Summary of Concepts Covered Whilst Doing the Project&lt;/h3&gt;
&lt;p&gt;This project challenges students to develop their decomposition, abstraction, algorithmic, and pattern recognition skills to provide a solution to a problem in a way that can be understood by both the machine and people.&lt;/p&gt;
&lt;p&gt;Students learn to break down a problem, and to extract the information most necessary to them through abstraction. In the creation of a solution (in this case, the game itself is the solution!), they must put their understanding of algorithm to the test, and with practice, they will soon recognise the formula behind programming.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Mon, 23 Jan 2017 21:54:47 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">846 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>New Release (nb154) coming next Friday</title>
 <link>http://explore.appinventor.mit.edu/blogs/jeff/2017/01/new</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;
This coming Friday, January 27th, we will be releasing version nb154&lt;br /&gt;
of MIT App Inventor.
&lt;/p&gt;
&lt;p&gt;
This is a component release, which means that it updates the&lt;br /&gt;
component software used on devices by MIT App Inventor developed&lt;br /&gt;
applications. Most of the changes are bugfixes or updates needed to&lt;br /&gt;
make MIT App Inventor compatible with the latest version of Android.
&lt;/p&gt;
&lt;p&gt;
There is one new feature, the “ShowListsAsJson” has been added to&lt;br /&gt;
Screen1. This property, when set, will result in list structures being&lt;br /&gt;
displayed in JavaScript Object Notation (JSON) instead of Lisp&lt;br /&gt;
structures. This property is only visible on Screen1, but effects all&lt;br /&gt;
screens.
&lt;/p&gt;
&lt;p&gt;
By default this new property is not set. However at a future date new&lt;br /&gt;
projects will be created with it set to true (existing projects will&lt;br /&gt;
not be affected).
&lt;/p&gt;
&lt;p&gt;
Because this is a component release, there will be a new MIT AI2&lt;br /&gt;
Companion released at the same time. The current Companion (version&lt;br /&gt;
2.39) will continue to work, but you will need the newer version&lt;br /&gt;
(currently planned as 2.40) in order to use the “ShowListsAsJson.”
&lt;/p&gt;
&lt;p&gt;
The release is scheduled for January 27th at 10PM US Eastern Standard&lt;br /&gt;
Time. That is 2017-01-28T03:00:00Z (aka 3AM on Saturday, January 28th,&lt;br /&gt;
UTC).
&lt;/p&gt;
&lt;p&gt;
-Jeff
&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Sun, 22 Jan 2017 22:11:21 +0000</pubDate>
 <dc:creator>jeff</dc:creator>
 <guid isPermaLink="false">845 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>Photo analysis with Microsoft Cognitive Services, using Makeblock CamVision extension</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2017/01/photo</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;i&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/tseng.jpeg&quot; style=&quot;float: left; margin-right: 10px; width: 18%;&quot; /&gt;This is a guest blog by MIT Master Trainer David Tseng of CAVEDU Education.&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;This is a simple project combining App Inventor and &lt;a href=&quot;https://www.microsoft.com/cognitive-services/en-us/computer-vision-api&quot; target=&quot;_blank&quot;&gt;Microsoft Cognitive Services :Computer Vision API&lt;/a&gt;. The app can upload a picture to Microsoft Cognitive Services :Computer Vision API after the photo is taken, then get the information below:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Description&lt;/li&gt;
&lt;li&gt;Foreground color&lt;/li&gt;
&lt;li&gt;Background color&lt;/li&gt;
&lt;li&gt;tags (json format, can easily put into Listpicker, Listview or Spinner)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Thanks to the &lt;a href=&quot;http://learn.makeblock.com/en/user-makeblock-computer-vision-extension-for-app-inventor/&quot; target=&quot;_blank&quot;&gt;CamVision extension by Makeblock&lt;/a&gt;. They also have another extension for their mBot robot, you should try it!&lt;/p&gt;
&lt;p style=&quot;clear:both;&quot;&gt;
&lt;strong&gt;Notice:&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;Your phone&#039;s camera will open when the [Prepare] button is pressed (although you can&#039;t see a preview, it is open). Other programs like QRcode Scanner which will also uses camera will now be unable to be used. You will have to close this app before using other camera-related apps.&lt;/p&gt;
&lt;h2&gt;How It Works&lt;/h2&gt;
&lt;p&gt;In the photo below, you can see besides a cat laying on a small table, there are many obstacles in the background, which makes it quite difficult to separate the main object (cat) and the background. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/cat-on-desk.jpg&quot; style=&quot;display:block; margin:auto; width: 50%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The result:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Description (a cat laying on a bed)&lt;/li&gt;
&lt;li&gt;Foreground color (grey)&lt;/li&gt;
&lt;li&gt;Background color (grey)&lt;/li&gt;
&lt;li&gt;Tags (indoor, cat, wall, laying)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/camvision-screenshot.png&quot; style=&quot;display:block; margin:auto; width: 30%;&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;How to Apply for API Key from Microsoft Cognitive Services&lt;/h2&gt;
&lt;p&gt;Please log in to &lt;a href=&quot;https://www.microsoft.com/cognitive-services/&quot; target=&quot;_blank&quot;&gt;Microsoft Cognitive Services main website&lt;/a&gt; with your Microsoft account (MSN is still working, haha~) or sign up for one.&lt;/p&gt;
&lt;p&gt;Please click &lt;strong&gt;APIs -&amp;gt; Computer Vision&lt;/strong&gt;, and finally click &lt;strong&gt;Get Started for Free&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/cognitive-services.png&quot; style=&quot;display:block; margin:auto; width: 70%; border: 1px solid grey;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Please check &lt;strong&gt;Computer Vision-Preview&lt;/strong&gt;; you can see the limit of the free trial is 5,000 transactions per month, 20 per minute (quite enough I think).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/computer-vision.png&quot; style=&quot;display:block; margin:auto; width: 70%; border: 1px solid grey;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;When you are done, you can see there are two Keys under the &lt;strong&gt;Computer Vision-Preview&lt;/strong&gt; section. Please click &lt;strong&gt;Show&lt;/strong&gt; to see the keys. You will need to use these key values in to your App Inventor project (see below). Either Key1 and Key2 are ok to use.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/key-screenshot.png&quot; style=&quot;display:block; margin:auto; width: 70%; border: 1px solid grey;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;You can click &lt;strong&gt;Show Quota&lt;/strong&gt; to check how many calls you&#039;ve used.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/cv-quota.png&quot; style=&quot;display:block; margin:auto; width: 70%; border: 1px solid grey;&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;How To&lt;/h2&gt;
&lt;p&gt;Start a new project in App Inventor. Please import &lt;a href=&quot;http://appinventor.makeblock.com/com.makeblock.appinventor.CamVision.aix&quot; target=&quot;_blank&quot;&gt;Makeblock&#039;s CamVision extension&lt;/a&gt; into your App Inventor project or import our &lt;a href=&quot;https://drive.google.com/open?id=0B51cwz24uqobeW94TnVOMzNBeG8&quot; target=&quot;_blank&quot;&gt;sample project&lt;/a&gt; directly.&lt;/p&gt;
&lt;h3&gt;Designer&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Button_Prepare:&lt;/strong&gt; Click to open camera, set API key.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Button_Photo:&lt;/strong&gt; Click to take picture.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Label:&lt;/strong&gt; Show result from Microsoft Computer Vision API, including description, foreground color, background color.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ListView:&lt;/strong&gt; Show result from Microsoft Computer Vision API: tags. You can put them into Spinner or ListPicker instead.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CamVision:&lt;/strong&gt; Upload picture to Microsoft Computer Vision API and get the results.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/camvision-designer.png&quot; style=&quot;display:block; margin:auto; width: 80%;&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;Blocks&lt;/h3&gt;
&lt;h4&gt;Step1:&lt;/h4&gt;
&lt;p&gt;Declare variable: &lt;strong&gt;CVApiKey&lt;/strong&gt; using the Key value we got from Microsoft (above).&lt;/p&gt;
&lt;p&gt;Clicking &lt;strong&gt;Button_Prepare&lt;/strong&gt; will open the camera, prepare the API key and show a &quot;True&quot; on your Screen1.Title when the camera is successfully opened.&lt;/p&gt;
&lt;p&gt;Then click &lt;strong&gt;Button_Photo&lt;/strong&gt; to take a picture (the app will not show what you&#039;ve taken on the screen). It will also show a &quot;True&quot; on your Screen1.Title when the picture is successfully taken.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/camvision-blocks1.png&quot; style=&quot;display:block; margin:auto; width: 80%;&quot; /&gt;&lt;/p&gt;
&lt;h4&gt;Step 2:
&lt;/h4&gt;&lt;p&gt;After the picture is taken, the &lt;strong&gt;CamVision.AfterPictureTaken&lt;/strong&gt; event should upload the picture to &lt;a href=&quot;https://www.microsoft.com/cognitive-services/&quot; target=&quot;_blank&quot;&gt;Microsoft Cognitive Services&lt;/a&gt; (&lt;strong&gt;CamVision1.SubmitPictureForComputerVision&lt;/strong&gt;).&lt;br /&gt;
After that, the &lt;strong&gt;CamVision.AfterComputerVisionResult&lt;/strong&gt; event returns the information we want. Set the Label1.Text to the results. You can try get other information such as AnalyzeColor and FaceDetection as well.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Description: DescriptionFromCV&lt;/li&gt;
&lt;li&gt;ForegroundColor: ForegroundColorNameFromCV&lt;/li&gt;
&lt;li&gt;BackgroundColor: BackgroundColorNameFromCV&lt;/li&gt;
&lt;li&gt;Tags TagsFromCV&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/camvision-blocks2.png&quot; style=&quot;display:block; margin:auto; width: 80%;&quot; /&gt;&lt;br /&gt;
Please note that if you give a wrong API key value (either typing error or wrong API key), this app will not get the correct information.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-images field-type-image field-label-hidden view-mode-rss&quot;&gt;
    &lt;div class=&quot;field-items&quot;&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/cat-on-desk.jpg?itok=5Xe-71mL&quot; width=&quot;480&quot; height=&quot;360&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/camvision-screenshot.png?itok=jCFQDk_s&quot; width=&quot;225&quot; height=&quot;400&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/cognitive-services.png?itok=zpTX7ugG&quot; width=&quot;480&quot; height=&quot;248&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/computer-vision.png?itok=W27vTiSb&quot; width=&quot;480&quot; height=&quot;210&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/key-screenshot.png?itok=L6miSGb4&quot; width=&quot;480&quot; height=&quot;233&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/cv-quota.png?itok=E5hU3H14&quot; width=&quot;480&quot; height=&quot;87&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/camvision-designer.png?itok=r52auETc&quot; width=&quot;480&quot; height=&quot;382&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/camvision-blocks1.png?itok=e6844wF6&quot; width=&quot;480&quot; height=&quot;207&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/camvision-blocks2.png?itok=mkLmQMyg&quot; width=&quot;480&quot; height=&quot;217&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
      &lt;/div&gt;
&lt;/div&gt;
&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Wed, 18 Jan 2017 23:33:24 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">842 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>App Inventor and IoTs</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2017/01/app</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;Please read the latest &lt;a href=&quot;https://xiangqunchen.blogspot.co.nz/2016/12/app-inventor-and-iots.html&quot; target=&quot;_blank&quot;&gt;blog&lt;/a&gt; by MIT Master Trainer Xiangqun &quot;Juliet&quot; Chen.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Wed, 18 Jan 2017 20:53:31 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">841 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>Opportunity</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2017/01</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;i&gt;This is a guest blog by MIT Master Trainer Sue Maddock.&lt;/i&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/maddock.png&quot; style=&quot;float: left; margin-right: 10px; width: 15%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;It’s been almost a year since I actively changed my focus from teaching computer science to promoting computer science.  While my fundamental goal has not changed – helping students of any age explore and enjoy the process of problem solving using programming – I have found myself seeking out different audiences in addition to teaching my traditional classes.  MIT App Inventor facilitates the process intuitively and convincingly.&lt;/p&gt;
&lt;p&gt;I teach in a college preparatory day school and my computer science classes – both at the AP level and the introductory electives – have been ‘full’ for several years.  Since I started teaching at the school I have watched enrollments grow and waitlists form.  However, the primary students in these classes were students who already knew they were interested in computer science; I wanted to reach out to students who had never considered programming or who had already rejected it as unrelated to their interests and therefore not worth pursuing.  I have found exposure to coding – as a first try or as a replacement of an outdated experience – to be critical.  I’d like to share four different ways in which I’ve tackled this problem by taking (or sometimes creating) an opportunity to share my love of coding with different groups.&lt;/p&gt;
&lt;p&gt;The first opportunity is due to a combination of my own role at school – that of a math teacher and a computer science teacher – and of the open-minded nature of my math department colleagues.  In recent years I’ve volunteered to step into my colleagues’ math classes and to teach a coding class, anywhere from 45 to 90 minutes.  I appreciate that they have been able to give me the time; in return I get to challenge a huge variety of students to try programming.  That short exposure to the type of thinking used in computer science intrigues students in surprising ways and I have had many students, most frequently girls, later tell me that the short lesson was pivotal in their decision to sign up for a class.&lt;/p&gt;
&lt;p&gt;The second opportunity arose when I visited my daughter in Sapporo, Japan this past summer.  Although her degree is in computer science, she is currently an assistant English teacher in a typical Japanese junior high school (grades 7-9).  Jenna asked me if I would allow her eighth grade students to interview me in order for them to practice their English.  I agreed, but asked if we could also do a programming demonstration.   Our limitation was one computer and four tablets to be ‘shared’ by 35 students.  For the demonstration Jenna and I helped the students collectively create a game app using App Inventor.  The game was then downloaded to the tablets and played by groups of students.  The end result was laughter, chaos, tablet faces that needed a good cleaning, and most importantly, a core of students in each class asking about App Inventor and questioning how they could do more programming.&lt;/p&gt;
&lt;p&gt;The third and fourth opportunities are directly related to each other through my school.  In June of last year I was asked to lead a 30 minute workshop on programming and when we returned to school in August I led a 2 hour workshop on computational thinking. There were fifteen in each session and the participants ranged from teachers in Pre-K up to 12th grade, as well as a few administrators. Very few of them had ever done any programming and most would check off a box marked Humanities rather than STEM if they were asked to categorize themselves. For the June group we started with a simple drawing app; by the time I told them that had to leave or be late to their next commitment (they had already stayed through their snack break) there were fifteen different projects underway in the classroom. As we worked – as teachers shared their successes and ideas and questions with each other – I was able to draw the parallel between what they were experiencing and what my students do on a daily basis. Suddenly the success I’ve had with students who were traditionally unmotivated in their traditional classes made sense to this group of teachers. I know that my colleagues’ experience of coding will translate into a recommendation to their advisees that computer science is worth trying.&lt;/p&gt;
&lt;p&gt;The August group also used App Inventor to explore the process of computational thinking. My colleagues were intrigued by how quickly several basic ideas taught in common to a group could swiftly transform into fifteen distinct projects, allowing for expressions of individual interests. I could see my colleagues’ stereotypical images of coding disintegrating as they worked. For me, a secondary but important goal of this session was to open a discussion of how computer science can take a lead or a supporting role in any discipline and that students deserve to be exposed to computer science. Over the past several years I have been collecting examples of how computer science supports research and innovation in diverse fields such as the digital humanities, political science, crisis informatics, and bio-medical engineering; these stories resonate. They are one more way in which we can demonstrate the importance of computer science to a group that needs to be shown.&lt;/p&gt;
&lt;p&gt;Students (and adults) who are reluctant to try computer science often do so because they have no understanding of what it currently means. Take any opportunity you are given to show them how much fun and meaningful it can be.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Tue, 10 Jan 2017 23:19:26 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">837 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>Spanish Teachers Learn App Inventor to Teach Computational Thinking</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2016/12</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;i&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/nunez.png&quot; style=&quot;float: left; margin-right: 10px; width: 15%;&quot; /&gt;This is a guest blog by MIT Master Trainer Jose Luis Núñez&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;Last Friday, we ran an Android App Development workshop using MIT App Inventor with students of the Master de Profesorado de Enseñanza Secundaria at Pablo de Olavide University in Seville, Spain. These students are future Spanish teachers so the interest was impressive.&lt;/p&gt;
&lt;p&gt;We discussed the benefits of using MIT App Inventor for Computational Thinking (CT) development and increasing the students’ motivation. We learned how to make simple applications and a method to apply the use of the tool in class.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/seville1.jpg&quot; style=&quot;display:block; margin:auto; width: 60%; clear:both;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;From App Inventor España, we would like to thank Pablo de Olavide University and its teacher D. Antonio H. Martín Padilla for betting on the use of this tool for the production of digital content within the framework of educational innovation.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/seville3.jpg&quot; style=&quot;display:block; margin:auto; width: 60%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;MIT Master Trainers team are aiming very high by introducing MIT App Inventor as a transversal tool in the teaching-learning process of any subject. Undoubtedly, this is a motivating element for students that fosters teamwork, the development of Computational Thinking and the creative expression of solutions to common problems.
&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/seville2.jpg&quot; style=&quot;display:block; margin:auto; width: 60%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;If you are interested in holding a workshop at your university, institute or school do not hesitate to contact any of us through the official MIT website.&lt;/p&gt;
&lt;p&gt;José Luis Núñez&lt;br /&gt;
@twajoseluis&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-images field-type-image field-label-hidden view-mode-rss&quot;&gt;
    &lt;div class=&quot;field-items&quot;&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/seville1.jpg?itok=Zc5OkRjT&quot; width=&quot;480&quot; height=&quot;360&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/seville2.jpg?itok=3Az6iUFv&quot; width=&quot;480&quot; height=&quot;360&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/seville3.jpg?itok=EQYXT9Ia&quot; width=&quot;480&quot; height=&quot;360&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
      &lt;/div&gt;
&lt;/div&gt;
&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Thu, 08 Dec 2016 15:20:17 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">822 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>New &quot;I Love My Smartphone Curriculum&quot; Released</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2016/11/new-i</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;Jeremy Scott, of The Royal Society of Edinburgh, just released version 2 of his middle/high school curriculum on mobile app development that features MIT App Inventor. The new resources include a tutor pack, learner pack, screencasts, apps, and media files, all downloadable and free to use.&lt;/p&gt;
&lt;p&gt;This is a great update to Jeremy’s original I Love My Smartphone curriculum, which used version 1 of App Inventor. The new version has been updated to use App Inventor 2. Please check it out! &lt;a href=&quot;https://www.rse.org.uk/schools/teachers/resources/&quot; target=&quot;_blank&quot;&gt;https://www.rse.org.uk/schools/teachers/resources/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Please note, you will have to scroll down the page to Computing Science Resources and look for I Love My Smartphone.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Wed, 23 Nov 2016 16:03:03 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">817 at http://explore.appinventor.mit.edu</guid>
</item>
</channel>
</rss>
