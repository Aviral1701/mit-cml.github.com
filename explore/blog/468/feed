<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xml:base="http://explore.appinventor.mit.edu"  xmlns:dc="http://purl.org/dc/elements/1.1/">
<channel>
 <title>Karen&#039;s blog</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen</link>
 <description></description>
 <language>en</language>
<item>
 <title>App Inventor and Makers (1): Smart Bathtub</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2017/03/app</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/bathtub-makers.jpg&quot; style=&quot;display:block; margin:auto; width: 60%;&quot; /&gt;&lt;br /&gt;
This is the latest &lt;a href=&quot;https://xiangqunchen.blogspot.co.nz/2017/02/app-inventor-and-maker-1-smart-bathtub.html&quot; target=&quot;_blank&quot;&gt;blog post&lt;/a&gt; from MIT Master Trainer Xiangqun (Juliet) Chen. Check out 9th grade students who make a smart bathtub with MIT App Inventor and Arduino. &lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-images field-type-image field-label-hidden view-mode-rss&quot;&gt;
    &lt;div class=&quot;field-items&quot;&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/bathtub-makers.jpg?itok=3dqaT80A&quot; width=&quot;480&quot; height=&quot;360&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
      &lt;/div&gt;
&lt;/div&gt;
&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Fri, 03 Mar 2017 23:05:37 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">868 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>Becoming a Middle School Computer Programming Teacher </title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2017/02-2</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;i&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blanchette.png&quot; style=&quot;float: left; margin-right: 10px; width: 15%;&quot; /&gt;This is a guest blog by MIT Master Trainer Sarah Blanchette.&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;Becoming a middle school computer programming teacher has been an enriching and eye-opening experience.   The focus of this blog is what works in middle school.&lt;/p&gt;
&lt;p&gt;#1:  Start simple.&lt;br /&gt;
#2: Go slow.  Allow time for concepts to sink in before moving on to the next, more complicated level.&lt;br /&gt;
#3: Encourage creativity, exploration, and risk-taking.&lt;br /&gt;
#4: Don’t spend too much time using one particular curriculum tool.&lt;br /&gt;
#5: Include making stuff. &lt;/p&gt;
&lt;p&gt;App Inventor is a great tool for learning programming concepts.  Students loved testing their apps on our tablets and showing other students what they created.  In the beginning (#1), we keep our apps simple.  We require certain features in the app and then encourage exploration (#5).&lt;/p&gt;
&lt;p&gt;When introducing a new concept, stay with it a while (#2).  Think of many ways to utilize the new concept, thereby providing ample time for the concept to sink in. For example, when introducing the concept of variables, provide clear direct instruction on what variables are and how to use them. Give students directions on how to make an app that requires use of a variable (we started with Tally Counter, from Project Lead the Way curriculum). Follow-up with more simple apps that involve variables, encouraging students to be creative.  This past week, a student named T.J. came up with the idea of using buttons with images to allow classmates to vote for their favorite NBA player (Westbrook, Curry, James, Durant). He will effortlessly use variables to hold the votes and the concept will sink in because of how strongly he feels about basketball. &lt;/p&gt;
&lt;p&gt;We saw much great student engagement when we added “Make Your Own” apps to the assignment list.  We raised the stakes by putting together a Project Show Day (their words), when they showed off their apps to other 6th grade students.  There was some reluctance to go from apps with detailed directions to Make Your Own; encouraging creativity and risk-taking for each and every app helps build students’ confidence levels.  &lt;/p&gt;
&lt;p&gt;We learned, after a while, students are ready for change (#4).  Even though there were many aspects to App Inventor we had not explored, there was a strong need to “move on.” Even amongst students who eagerly pursued new and creative ways to use App Inventor, the enthusiasm for trying something new was unbridled.&lt;/p&gt;
&lt;p&gt;Middle school students love to make things (#5). After learning CS concepts using App Inventor, our kids were ready for and quite loved making Arduino projects. This year we will use Makey Makey as an introductory activity (can turn bananas into arrow keys in conjunction with Scratch game) before moving on to the more complex Arduino projects. Now that App Inventor blocks exist for Lego Mindstorms EV3 robots, we look forward to making apps to control our robots.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Sat, 25 Feb 2017 01:09:02 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">866 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>App Inventor Mentioned in Batgirl Comics </title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2017/02/app</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;MIT App Inventor was mentioned in the latest Batgirl DC Comic Book, when Barbara Gordon, aka Batgirl, volunteers at a coding workshop at a local elementary school. They even added a link to the App Inventor site!&lt;br /&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/batgirl.png&quot; style=&quot;display:block; margin:auto; width: 100%;&quot; /&gt;&lt;br /&gt;&lt;i&gt;Image from Batgirl (2016-) #8&lt;br /&gt;
Son of Penguin Part 2&lt;br /&gt;
Produced by DC Entertainment (DC Comics)&lt;br /&gt;
Colored by Mat Lopes&lt;br /&gt;
Cover by Chris Wildgoose&lt;br /&gt;
Inks by Chris Wildgoose and Jon Lam&lt;br /&gt;
Pencils by Chris Wildgoose&lt;br /&gt;
Written by Hope Larson&lt;/i&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Sat, 25 Feb 2017 01:05:01 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">865 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>Verizon Innovative Learning App Challenge Winners Announced</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2017/02-1</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/vilac.png&quot; style=&quot;display:block; margin:auto; width: 80%;&quot; /&gt;&lt;br /&gt;
The Best in Nation winners of the Verizon Innovative Learning App Challenge where just announced. Eight teams from around the country were awarded $15,000 by Verizon Innovative Learning, in addition to the $5000 they were awarded as one of 100 Best in State teams. Each member of the winning Best in State teams also received a Verizon tablet. A ninth team, the Fan Favorite, also received Best in Nation status and the resulting prizes, by garnering the most votes in an online poll.&lt;/p&gt;
&lt;p&gt;The Best in Nation award is intended to help the winning teams build a working mobile app from their design and to enhance STEM education at their school or nonprofit groups/clubs. In addition, each team will work with an MIT App Inventor trainer over the next 3 months to make their mobile app a reality. Each Best in Nation team will also travel to the national TSA (Technology Student Association) conference in Orlando in June to present their mobile apps. &lt;/p&gt;
&lt;p&gt;Teams will have the support of an MIT App Inventor Master Trainer to help them go beyond the design phase to actually build the app and publish it on the Google Play Store. Trainers will travel to their respective teams for a two day on-site visit, where they will teach the students how to use App Inventor, guide them in the correct choice of available technologies, and assist them in the project management side of app building. Over the next three months, the trainer will continue to support their team via online meetings to ensure they can successfully complete their app. The beauty of using App Inventor for this challenge is that, very quickly, students are able to build a working app, even though many of the students have had little or no prior programming experience. Because of its drag-and-drop visual programming interface, non-programmers can easily pick up the necessary skills to make a fully functional app. The trainers can help students navigate more complex technical issues like map interfaces, web API’s, and bluetooth communication.&lt;/p&gt;
&lt;p&gt;The only direction that teams are given at the start of the challenge are that the apps should solve a problem in the community. The nine winning app designs address various issues and involve innovative ways to solve those issues through mobile computing. Many of problems that teams decided to address came as a result of first-hand experience of one or several of the team members. &lt;/p&gt;
&lt;p&gt;A middle school team from Sharon, MA will develop their &lt;strong&gt;Empower&lt;/strong&gt; app to help people with autism connect with caregivers and find jobs. The inspiration for the app was team member’s brother, who has autism, and who would benefit from this app. The app will also connect volunteers with opportunities to help out people with autism.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In-Reach&lt;/strong&gt;, an app idea from a North Pole Middle School team in Alaska, aims to help those suffering with PTSD to track their triggers and to connect users with specialists. A forum for communicating with others who suffer from PTSD will be another app feature. This app idea was also spawned by a personal connection. A team member’s father is a military veteran who suffers from PTSD. &lt;/p&gt;
&lt;p&gt;Another winning middle school team from Capital Day School in Frankfort, Kentucky hopes to tackle the problem of wasted food, with their app, &lt;strong&gt;Waste Free America&lt;/strong&gt;. The app will connect grocery stores and restaurants with homeless shelters, alerting them when they have food they are going to dispose of, and make it available for pickup.&lt;/p&gt;
&lt;p&gt;Students from Meeteetse Junior High in Wisconsin hope to connect hobby farmers and small farms who want to sell their produce directly to consumers. Their app, &lt;strong&gt;Farmersbook&lt;/strong&gt;, was inspired by the fact the students live in a “food desert”, where they have to travel 30 minutes to buy groceries. By connecting consumers to local farmers and gardeners, they are making healthy produce available on a local level.&lt;/p&gt;
&lt;p&gt;The idea for the &lt;strong&gt;See Something, Say Something&lt;/strong&gt; app came about from the very personal experience of the Taos STEAM Academy team in New Mexico. They lost four friends in the past year to teen suicide. The app will provide real-time crisis intervention along with community and social engagement. These students want to empower teens and the community to help prevent suicides with their app.&lt;/p&gt;
&lt;p&gt;The Girls Who Code Club at Greenwich High School in Connecticut, has designed the &lt;strong&gt;Under My Wing&lt;/strong&gt; app, to provide a comprehensive personal safety app for girls. Being an all-girl team, this issue stood out for them. The app will provide quick communication features to contact family and police in an unsafe situation, along with self-defense videos made by a team member who is a black belt!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Take Me There&lt;/strong&gt; is yet another app that was inspired by personal experience. The app, designed by the Tesla STEM Academy team from Redmond, Washington, will assist people with disabilities to find viable transportation options and directions. A team member who volunteered at Little Bit Therapeutic Riding Center met people with disabilities for whom this app could really help. The app, based on the user’s disability, gives the user different transportation routes such as walking, Uber, and bus by interacting with online information and maps.&lt;/p&gt;
&lt;p&gt;Another Girls Who Code team, from Mountain View, California, designed another personal safety app. The &lt;strong&gt;Soteria&lt;/strong&gt; app uses crime information from the local police department to create a safe navigation route for pedestrians. It also includes a Twitter feed from the police to keep users up-to-date with possible unsafe conditions.&lt;/p&gt;
&lt;p&gt;The Fan Favorite, a team from De Pere Middle School in Wyoming, created an anti-bullying app, &lt;strong&gt;Pass It On&lt;/strong&gt;, that “puts the power back in the hands of the kids”. In addition to allowing users to report bullying incidents to school staff, the app also promotes reporting of good deeds that can result in e-cash that can be used in the school store.&lt;/p&gt;
&lt;p&gt;All of these apps tackle serious issues that are founded on personal experiences and/or connections. The students’ desire to make an app to help others and have an impact on their community and the world is truly inspirational. With the help and support of Verizon Innovative Learning, the Technology Student Association, and MIT, these young people will be able to see their ideas come to fruition, and hopefully be inspired to continue to create and build things with social impact.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-images field-type-image field-label-hidden view-mode-rss&quot;&gt;
    &lt;div class=&quot;field-items&quot;&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/vilac.png?itok=PYSU2bcX&quot; width=&quot;480&quot; height=&quot;299&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
      &lt;/div&gt;
&lt;/div&gt;
&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Sat, 18 Feb 2017 01:03:02 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">859 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>Working with the ITunes API</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2017/02-0</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;i&gt;&lt;img src=&quot;/sites/all/files/people/AUBREY.png&quot; style=&quot;float: left; margin-right: 10px; width: 15%;&quot; /&gt;This is a guest blog by MIT graduate and former MIT App Inventor team member Aubrey Colter&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;In May 2015, I went to Oakland, CA, to teach an App Inventor workshop to a group of students at Youth Radio. I wanted to teach them about Application Program Interfaces (APIs) to give them a glimpse of how they could extend their apps beyond the available App Inventor components. APIs allow you to access data available on a variety of different sites, such as YouTube, Facebook, and Twitter. These days, most APIs require the programmer to authenticate in some way (usually with a login or token). I knew that setting up the necessary credentials for using an API would take most of our time together. Instead, I decided to search for APIs that did not require authentication.&lt;/p&gt;
&lt;p&gt;That was how I found the iTunes API. It felt like it had potential to be part of a fun tutorial, so I began searching through the documentation. The first draft of my app called the iTunes API and retrieved information from the database about a musician. However, I knew that the young programmers I would be working with would be uninterested and bored. They could get the same information by reading Wikipedia. It also didn’t showcase any of the smartphone’s capabilities. So I kept searching, until I found the 30-second preview clip API endpoint. When I realized that the App Inventor Sound component could play sound clips from links, I knew I had a great app. I built my app with a very simple interface -- just a search box and a button. Once the button is clicked, the search terms are parsed and sent to the iTunes servers, which returns a list of the artist’s songs’ 30-second preview clips. I picked the first one and played it, and I knew that I had something fun. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/apis.png&quot; style=&quot;float: right; margin-left: 10px; width: 30%; border: 1px solid grey;&quot; /&gt;I took my app to Youth Radio for our workshop, and the programmers had a good time learning about APIs. As I’ve iterated on the app for other workshops and open houses for both youth and teachers, everyone has always been so surprised. I love that delight moment! Students are always shocked that my phone can pull up a song by any artist they like (Taylor Swift and Justin Bieber are the favorites).&lt;/p&gt;
&lt;p&gt;You can do a lot to extend the iTunes API app once you understand the concept of an API. I’ve been really pleased with how it has developed as I’ve continued to work on it. I also love hearing positive feedback from teachers and students. I hope you’ll enjoy it, too!&lt;/p&gt;
&lt;p&gt;Here is a link to the &lt;a href=&quot;https://docs.google.com/document/d/1zr_e7Pu0UVgx8Z_AUqM3I7nD54k8CAFGIUy0FXBzzLo/edit?usp=sharing&quot; target=&quot;_blank&quot;&gt;tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Wed, 15 Feb 2017 23:13:42 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">856 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>EU Code Week 2016 and MIT App Inventor</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2017/02/eu</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;i&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/kurrer.png&quot; style=&quot;float: left; margin-right: 10px; width: 15%;&quot; /&gt;This is a guest blog by MIT Master Trainer Rosanna Kurrer&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;EU Code Week (&lt;a href=&quot;http://codeweek.eu/&quot;&gt;http://codeweek.eu/&lt;/a&gt;) is a grassroots movement which started in 2012 and is supported by the European Commission, and has since spread to over 50 countries around the world. The European Commission is the executive arm of the European Union and promotes the general interests of its 28 member states (&lt;a href=&quot;http://ec.europa.eu/index_en.htm&quot;&gt;http://ec.europa.eu/index_en.htm&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The mission of EU Code Week is to get as much people of all ages take their first steps in learning how to code and to guide them on the path to being creators of digital technology, and effective problem solvers.
&lt;/p&gt;
&lt;p&gt;Every year for a whole week in October, coding events and activities are organized in schools, after-school clubs, organizations, offices and libraries. What started with 10,000 participants in 2012 has grown to almost a million people coding, most of them for the first time. (&lt;a href=&quot;https://ec.europa.eu/digital-single-market/en/news/million-coded-in-record-2016-EU-code-week&quot;&gt;https://ec.europa.eu/digital-single-market/en/news/million-coded-in-reco...&lt;/a&gt;)
&lt;/p&gt;
&lt;p&gt;Contributing to the success of this initiative has been the tireless work of a lot of Code Week ambassadors in all the 28 EU member states as well as in some participating countries in Africa, Asia and America.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/eu-appinventor.png&quot; style=&quot;display:block; margin:auto; width: 80%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;At the heart of the EU in Brussels, Belgium, several workshops took place in schools and in organizations to give participants a first-time hands-on experience in Android app development using MIT App Inventor. Among the workshops organized were an after-school coding class for middle school girls aged eleven to fourteen, (&lt;a href=&quot;https://www.facebook.com/digitalmuseorg/posts/1279609008771317&quot;&gt;https://www.facebook.com/digitalmuseorg/posts/1279609008771317&lt;/a&gt;), a digital starter event for women designing digital solutions with and for women refugees (&lt;a href=&quot;https://mifbru16oct.eventbrite.com&quot;&gt;https://mifbru16oct.eventbrite.com&lt;/a&gt;), and a coding session at the European Commission for policy makers and officials (&lt;a href=&quot;https://ec.europa.eu/digital-single-market/en/news/womenintech-organised-first-ever-coding-session-european-commission#WomenInTech&quot;&gt;https://ec.europa.eu/digital-single-market/en/news/womenintech-organised...&lt;/a&gt;).
&lt;/p&gt;
&lt;p&gt;This year EU Code Week will be celebrating it’s fifth year, and even more coding events and school coding programs will be scheduled to take place in October.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/eu-code-week1.png&quot; style=&quot;display:block; margin:auto; width: 80%;&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/eu-code-week2.png&quot; style=&quot;display:block; margin:auto; width: 80%;&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/eu-code-week3.png&quot; style=&quot;display:block; margin:auto; width: 80%;&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/eu-code-week-poster.png&quot; style=&quot;display:block; margin:auto; width: 80%;&quot; /&gt;&lt;br /&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/eu-code-week4.png&quot; style=&quot;display:block; margin:auto; width: 80%;&quot; /&gt;&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-images field-type-image field-label-hidden view-mode-rss&quot;&gt;
    &lt;div class=&quot;field-items&quot;&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/eu-appinventor.png?itok=zx9gR9_G&quot; width=&quot;480&quot; height=&quot;360&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/eu-code-week-poster.png?itok=crdiaZbR&quot; width=&quot;480&quot; height=&quot;276&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/eu-code-week1.png?itok=9C2Z_uut&quot; width=&quot;480&quot; height=&quot;360&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/eu-code-week2.png?itok=Fb1CYE6n&quot; width=&quot;480&quot; height=&quot;262&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/eu-code-week3.png?itok=5vsbN2K7&quot; width=&quot;480&quot; height=&quot;293&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/eu-code-week4.png?itok=7HQOhTws&quot; width=&quot;480&quot; height=&quot;360&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
      &lt;/div&gt;
&lt;/div&gt;
&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Sat, 11 Feb 2017 02:01:38 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">855 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>Challenges and tips for teaching a large coding class</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2017/02</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/zhou.jpeg&quot; style=&quot;float: left; margin-right: 10px; width: 15%;&quot; /&gt;&lt;i&gt;This is a guest blog by MIT Master Trainer Anqi Zhou.&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;During summer 2016, I had the opportunity to teach App Inventor to classes of 30 beginners aged 10 - 12 in Beijing. It was exciting to bring the power of coding to so many young persons, but even with three teaching assistants in the room, it was a tough experience.&lt;/p&gt;
&lt;p&gt;With a limited number of programming teachers available at present, finding ways to effectively teach a large class is important in bringing programming to more students. In this post, I am going to share the challenges and tips I gathered from the teaching experience.&lt;/p&gt;
&lt;h2&gt;Debugging, distraction and diverse capabilities are key challenges&lt;/h2&gt;
&lt;p&gt;Firstly, anyone who teaches programming can tell you that “my program is not working” is the most frequently heard phrase in the classroom. Unlike in a maths classroom, where a definite answer can be easily given to most questions, to give an answer to “my program is not working” usually requires timeout for individual attention and teaching experience. Maybe it’s a specific spelling error somewhere, maybe it’s Internet connection issues, maybe it’s anti-virus software going crazy, maybe it’s just a slow computer, the list goes on. When you are responsible for more than six students, you’d probably be rushing around and putting out fires everywhere.&lt;/p&gt;
&lt;p&gt;Secondly, working on a computer opens a world of distraction to students - websites, links, emails, games, videos and whatnot. The larger the class size, the more difficult it is to keep everyone on track and keep the show moving on.&lt;/p&gt;
&lt;p&gt;Adding to the complication is that students usually come with a diverse range of capabilities. Some would take five minutes to download and locate a picture and some only type with index fingers. The students more familiar with basic computer skills are prone to distraction while the slower ones may fall behind the classroom flow.&lt;br /&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/appinventor-classroom.png&quot; style=&quot;display:block; margin:auto; width: 60%;&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;10 Tips for teaching a large class&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1) One machine per student if possible&lt;/strong&gt;&lt;br /&gt;
Sharing machines by design inevitably sends a subtle message that not everyone needs to be fully engaged at all times. Even though we do need to include elements of teamwork and pair programming in our class, it’s still better to give each person a machine to be responsible for, otherwise it’s easy to see at least half of the students with wandering minds.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2) Prepare the machines&lt;/strong&gt;&lt;br /&gt;
That includes charging and downloading relevant software ahead of time. You would not want to have many students sharing a limited number of power outlets located in awkward positions in the room nor fighting for Internet bandwidth during your class.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3) Good student monitoring software&lt;/strong&gt;&lt;br /&gt;
Especially the kind that allows you to remotely control a student’s screen and bring it up for the whole class to see. When a student gives you a bug alert, chances are, some other students are probably experiencing similar problems. Helping one student remotely debug and projecting the process to the whole class would make the debugging processes more efficient.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4) Allow students to go at their own pace if needed&lt;/strong&gt;&lt;br /&gt;
Since it’s easy for students to fall into different paces, it’s helpful to prepare a worksheet, a book or a web page of classroom materials, so that faster students can challenge themselves ahead while students who take more time can go at their comfortable pace.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5) Prepare different questions to challenge on various dimensions&lt;/strong&gt;&lt;br /&gt;
Students have different strengths, some understand concepts well, some program very fast, and some are more artistic. Apart from programming challenges, I’d also prepare design challenges in each lesson, so that a student who programs fast can be engaged while a student who struggles with code can have opportunities to easily contribute ideas.&lt;/p&gt;
&lt;p&gt;Here are some examples:&lt;br /&gt;
How would you change the chat app you programmed if the users are primary school students? How would you change it if the users are the elderly?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6) Warm up exercises for basic computer skills&lt;/strong&gt;&lt;br /&gt;
If students come from different basic computer skill levels, it’s worthwhile giving them some warmup exercises to save teachers class time explaining computer basics. A typing race or downloading and saving a specific fun picture can work wonders as an ice-breaker game.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7) Set definite and visible time limits for each task&lt;/strong&gt;&lt;br /&gt;
Unless it’s a designated period of free exploration, I’d usually set a time limit for each task, such as downloading a picture or drawing a sprite, with a visible countdown timer. It’s a way to make it clear that we will stop and move on together when the time is up.  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/classroom-timer.png&quot; style=&quot;display:block; margin:auto; width: 80%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8) Reward good teamwork&lt;/strong&gt;&lt;br /&gt;
In a large class, I think it’s worthwhile getting the students who program faster to act as your teaching assistant. The upside is that they can solidify their understanding by helping others, and the downside is that young students tend to help by doing rather than by teaching and explaining. I would pre-assign students into various teams and give clear rewards to the teams that not only finish the challenges but also are best at explaining what they have done.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;9) Prepare a FAQ sheet&lt;/strong&gt;&lt;br /&gt;
I would prepare a sheet of FAQs for any lesson to screen common and easy-to-fix bugs. When students encounter a bug, they can check the FAQs first.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10) Make sure students know why they are here&lt;/strong&gt;&lt;br /&gt;
The last one applies to any class size really. It’s vital for students to understand why they are learning and better to make sure they want to be here. It never hurts to repeat their goals and what they need to do to achieve them frequently. A large class of unmotivated students with access to computers is a recipe for disaster.&lt;/p&gt;
&lt;p&gt;Teaching a large class is challenge but necessary work as educators. I hope you find my tips helpful!&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-images field-type-image field-label-hidden view-mode-rss&quot;&gt;
    &lt;div class=&quot;field-items&quot;&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/appinventor-classroom.png?itok=OsvkrNVg&quot; width=&quot;415&quot; height=&quot;277&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/classroom-timer.png?itok=pzEP1FyO&quot; width=&quot;480&quot; height=&quot;187&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
      &lt;/div&gt;
&lt;/div&gt;
&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Tue, 07 Feb 2017 23:11:41 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">854 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>My Experience at the App Inventor Summit</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2017/01/my</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;i&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/lim.png&quot; style=&quot;float: left; margin-right: 10px; width: 15%;&quot; /&gt;This is a guest blog by MIT Master Trainer Yen Yen Lim&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;My blog will focus on a couple of presentations I watched as an attendee, and my experience as a hackathon judge at the App Inventor Summit in MIT Media Lab on June 22-24, 2016. &lt;/p&gt;
&lt;p&gt;I was fascinated by one of the presentations. It showcased an app created by a customized App Inventor which sent live data to iSense (&lt;a href=&quot;http://www.isenseproject.org&quot; target=&quot;_blank&quot;&gt;www.isenseproject.org&lt;/a&gt;) which is an online collaborative data visualization system. Through the system, the data fed to iSense was then transformed into a colorful graphical chart on the website. This App Inventor project, Creating Data-Rich Projects in App Inventor with AppVis, was presented by 3 college students, Fred Martin &amp;amp; Farzeen Harunani from UMass Lowell, and Samantha Michalka from Olin College. The presentation slides can be found &lt;a href=&quot;https://docs.google.com/presentation/d/11WNYx4UIRwj3h_YIvnQ5jNQpsCHUj9UpIQpHcalZvvU/edit#slide=id.g114941b1bd_0_238 target=&quot; _blank=&quot;&quot;&gt;here&lt;/a&gt;.  The group has created iSense-enabled versions of App Inventor and its App companion. The App Inventor IDE is located at &lt;a href=&quot;http://ai.cspathways.org&quot; target=&quot;_blank&quot;&gt;ai.cspathways.org&lt;/a&gt;.  And, its App Inventor companion can be scanned via a QR code by clicking “Help” and then “Companion Information” on ai.cspathways.org, or downloaded from &lt;a href=&quot;http://bit.ly/appviscomp&quot; target=&quot;_blank&quot;&gt;bit.ly/appviscomp&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I also learned that the newest release of App Inventor includes a new feature, Bluetooth Low Energy, which allows mobile apps to control Bluetooth-low-energy enabled devices. Jose Gomez-Marquez and Andrew McKinney, from MIT, demonstrated its usage.&lt;/p&gt;
&lt;p&gt;During the summit, I also had the opportunity to be one of the 4 judges for the kids’ hackathon.  It was an interesting event where the kids were given a task to create an app to address any problem pertaining to environmental science, ecology, or human ecology. The app was judged on the following criteria in decreasing merit: the theme of the app, the feasibility of implementing the idea on the mobile, the originality of the idea, the user-interface of the app, the coding of the app, and the group oral presentation of their idea.  In order to encourage the use of the various mobile components that App Inventor supports, additional points were awarded based on the number of components being utilized in the apps:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Media: player, sound, text to speech, camera, camcorder, image, etc. &lt;/li&gt;
&lt;li&gt;Sensors: clock, location, orientation, NFC, accelerometer, pedometer, etc.&lt;/li&gt;
&lt;li&gt;Social: email, texting, photos, sharing, Twitter, use of contact list&lt;/li&gt;
&lt;li&gt;Storage: fusion tables, files, Tiny DB, Firebase DB&lt;/li&gt;
&lt;li&gt;Connectivity: Bluetooth, web, activity starter, etc.&lt;/li&gt;
&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Fri, 27 Jan 2017 02:29:18 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">850 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>Teaching Maths App Project</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2017/01-0</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;i&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/lam.png&quot; style=&quot;float: left; margin-right: 10px; width: 15%;&quot; /&gt;This is a guest blog by MIT Master Trainer Carly Lam.&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;Maths Survival Game Project involves creating a mobile game with MIT App Inventor that upon starting, will prompt maths questions to pop up on the screen, which the player will have to answer. There will be a timer that limits the amount of time given to the player to answer the questions correctly. Incorrect answers or answers not submitted in time will cause the player to lose one ‘life’ out of three ‘lives’. Upon losing all ‘lives’, the player will be shown a small pop up screen that informs of the player’s loss, and a button that allows the game to be restarted. When one answer is submitted correctly, the player will be awarded one point, and these points will add up under the player’s High Score. &lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/maths-app.png&quot; style=&quot;float: right; margin-left: 10px; margin-top: 5px; width: 25%; border: 1px solid grey;&quot; /&gt;The player will also be congratulated when a new High Score has been reached. The aim of this game is to speed up user’s arithmetic skills such as solving multiplication, division, addition and subtraction under time pressure.&lt;br /&gt;&lt;/p&gt;&lt;h3&gt;The Learning Goals of the Project&lt;/h3&gt;
&lt;p&gt;In this Maths Game Project, the learning goal we have set up for the students is mainly the ability to learn and apply knowledge. We introduce the students to programming concepts including variables, database storage, random generators, and incrementation. They have to apply these to their game through effective and strategic planning to build this fun, educational, and most importantly, functional game.&lt;/p&gt;
&lt;p&gt;Students explore cause and effect within this program. They must designate each button to a purpose that it must serve. For example, having a button to generate a question, a number, or to take the player to a different screen. Timers are something else that they had to work with. They must program the computer to recognise at what interval would the player have failed the question and lost a ‘life’, whether they have plenty or just enough time, and to behave to these conditions appropriately.&lt;/p&gt;
&lt;h3&gt;Summary of Concepts Covered Whilst Doing the Project&lt;/h3&gt;
&lt;p&gt;This project challenges students to develop their decomposition, abstraction, algorithmic, and pattern recognition skills to provide a solution to a problem in a way that can be understood by both the machine and people.&lt;/p&gt;
&lt;p&gt;Students learn to break down a problem, and to extract the information most necessary to them through abstraction. In the creation of a solution (in this case, the game itself is the solution!), they must put their understanding of algorithm to the test, and with practice, they will soon recognise the formula behind programming.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Mon, 23 Jan 2017 21:54:47 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">846 at http://explore.appinventor.mit.edu</guid>
</item>
<item>
 <title>Photo analysis with Microsoft Cognitive Services, using Makeblock CamVision extension</title>
 <link>http://explore.appinventor.mit.edu/blogs/karen/2017/01/photo</link>
 <description>&lt;div class=&quot;field field-name-body field-type-text-with-summary field-label-hidden view-mode-rss&quot;&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot; property=&quot;content:encoded&quot;&gt;&lt;p&gt;&lt;i&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/tseng.jpeg&quot; style=&quot;float: left; margin-right: 10px; width: 18%;&quot; /&gt;This is a guest blog by MIT Master Trainer David Tseng of CAVEDU Education.&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;This is a simple project combining App Inventor and &lt;a href=&quot;https://www.microsoft.com/cognitive-services/en-us/computer-vision-api&quot; target=&quot;_blank&quot;&gt;Microsoft Cognitive Services :Computer Vision API&lt;/a&gt;. The app can upload a picture to Microsoft Cognitive Services :Computer Vision API after the photo is taken, then get the information below:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Description&lt;/li&gt;
&lt;li&gt;Foreground color&lt;/li&gt;
&lt;li&gt;Background color&lt;/li&gt;
&lt;li&gt;tags (json format, can easily put into Listpicker, Listview or Spinner)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;Thanks to the &lt;a href=&quot;http://learn.makeblock.com/en/user-makeblock-computer-vision-extension-for-app-inventor/&quot; target=&quot;_blank&quot;&gt;CamVision extension by Makeblock&lt;/a&gt;. They also have another extension for their mBot robot, you should try it!&lt;/p&gt;
&lt;p style=&quot;clear:both;&quot;&gt;
&lt;strong&gt;Notice:&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;Your phone&#039;s camera will open when the [Prepare] button is pressed (although you can&#039;t see a preview, it is open). Other programs like QRcode Scanner which will also uses camera will now be unable to be used. You will have to close this app before using other camera-related apps.&lt;/p&gt;
&lt;h2&gt;How It Works&lt;/h2&gt;
&lt;p&gt;In the photo below, you can see besides a cat laying on a small table, there are many obstacles in the background, which makes it quite difficult to separate the main object (cat) and the background. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/cat-on-desk.jpg&quot; style=&quot;display:block; margin:auto; width: 50%;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The result:&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Description (a cat laying on a bed)&lt;/li&gt;
&lt;li&gt;Foreground color (grey)&lt;/li&gt;
&lt;li&gt;Background color (grey)&lt;/li&gt;
&lt;li&gt;Tags (indoor, cat, wall, laying)&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/camvision-screenshot.png&quot; style=&quot;display:block; margin:auto; width: 30%;&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;How to Apply for API Key from Microsoft Cognitive Services&lt;/h2&gt;
&lt;p&gt;Please log in to &lt;a href=&quot;https://www.microsoft.com/cognitive-services/&quot; target=&quot;_blank&quot;&gt;Microsoft Cognitive Services main website&lt;/a&gt; with your Microsoft account (MSN is still working, haha~) or sign up for one.&lt;/p&gt;
&lt;p&gt;Please click &lt;strong&gt;APIs -&amp;gt; Computer Vision&lt;/strong&gt;, and finally click &lt;strong&gt;Get Started for Free&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/cognitive-services.png&quot; style=&quot;display:block; margin:auto; width: 70%; border: 1px solid grey;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Please check &lt;strong&gt;Computer Vision-Preview&lt;/strong&gt;; you can see the limit of the free trial is 5,000 transactions per month, 20 per minute (quite enough I think).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/computer-vision.png&quot; style=&quot;display:block; margin:auto; width: 70%; border: 1px solid grey;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;When you are done, you can see there are two Keys under the &lt;strong&gt;Computer Vision-Preview&lt;/strong&gt; section. Please click &lt;strong&gt;Show&lt;/strong&gt; to see the keys. You will need to use these key values in to your App Inventor project (see below). Either Key1 and Key2 are ok to use.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/key-screenshot.png&quot; style=&quot;display:block; margin:auto; width: 70%; border: 1px solid grey;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;You can click &lt;strong&gt;Show Quota&lt;/strong&gt; to check how many calls you&#039;ve used.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/cv-quota.png&quot; style=&quot;display:block; margin:auto; width: 70%; border: 1px solid grey;&quot; /&gt;&lt;/p&gt;
&lt;h2&gt;How To&lt;/h2&gt;
&lt;p&gt;Start a new project in App Inventor. Please import &lt;a href=&quot;http://appinventor.makeblock.com/com.makeblock.appinventor.CamVision.aix&quot; target=&quot;_blank&quot;&gt;Makeblock&#039;s CamVision extension&lt;/a&gt; into your App Inventor project or import our &lt;a href=&quot;https://drive.google.com/open?id=0B51cwz24uqobeW94TnVOMzNBeG8&quot; target=&quot;_blank&quot;&gt;sample project&lt;/a&gt; directly.&lt;/p&gt;
&lt;h3&gt;Designer&lt;/h3&gt;
&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Button_Prepare:&lt;/strong&gt; Click to open camera, set API key.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Button_Photo:&lt;/strong&gt; Click to take picture.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Label:&lt;/strong&gt; Show result from Microsoft Computer Vision API, including description, foreground color, background color.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ListView:&lt;/strong&gt; Show result from Microsoft Computer Vision API: tags. You can put them into Spinner or ListPicker instead.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;CamVision:&lt;/strong&gt; Upload picture to Microsoft Computer Vision API and get the results.&lt;/li&gt;
&lt;/ol&gt;&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/camvision-designer.png&quot; style=&quot;display:block; margin:auto; width: 80%;&quot; /&gt;&lt;/p&gt;
&lt;h3&gt;Blocks&lt;/h3&gt;
&lt;h4&gt;Step1:&lt;/h4&gt;
&lt;p&gt;Declare variable: &lt;strong&gt;CVApiKey&lt;/strong&gt; using the Key value we got from Microsoft (above).&lt;/p&gt;
&lt;p&gt;Clicking &lt;strong&gt;Button_Prepare&lt;/strong&gt; will open the camera, prepare the API key and show a &quot;True&quot; on your Screen1.Title when the camera is successfully opened.&lt;/p&gt;
&lt;p&gt;Then click &lt;strong&gt;Button_Photo&lt;/strong&gt; to take a picture (the app will not show what you&#039;ve taken on the screen). It will also show a &quot;True&quot; on your Screen1.Title when the picture is successfully taken.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/camvision-blocks1.png&quot; style=&quot;display:block; margin:auto; width: 80%;&quot; /&gt;&lt;/p&gt;
&lt;h4&gt;Step 2:
&lt;/h4&gt;&lt;p&gt;After the picture is taken, the &lt;strong&gt;CamVision.AfterPictureTaken&lt;/strong&gt; event should upload the picture to &lt;a href=&quot;https://www.microsoft.com/cognitive-services/&quot; target=&quot;_blank&quot;&gt;Microsoft Cognitive Services&lt;/a&gt; (&lt;strong&gt;CamVision1.SubmitPictureForComputerVision&lt;/strong&gt;).&lt;br /&gt;
After that, the &lt;strong&gt;CamVision.AfterComputerVisionResult&lt;/strong&gt; event returns the information we want. Set the Label1.Text to the results. You can try get other information such as AnalyzeColor and FaceDetection as well.&lt;/p&gt;
&lt;ul&gt;&lt;li&gt;Description: DescriptionFromCV&lt;/li&gt;
&lt;li&gt;ForegroundColor: ForegroundColorNameFromCV&lt;/li&gt;
&lt;li&gt;BackgroundColor: BackgroundColorNameFromCV&lt;/li&gt;
&lt;li&gt;Tags TagsFromCV&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;&lt;img src=&quot;/sites/explore.appinventor.mit.edu/files/blog/camvision-blocks2.png&quot; style=&quot;display:block; margin:auto; width: 80%;&quot; /&gt;&lt;br /&gt;
Please note that if you give a wrong API key value (either typing error or wrong API key), this app will not get the correct information.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;field field-name-field-blog-images field-type-image field-label-hidden view-mode-rss&quot;&gt;
    &lt;div class=&quot;field-items&quot;&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/cat-on-desk.jpg?itok=5Xe-71mL&quot; width=&quot;480&quot; height=&quot;360&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/camvision-screenshot.png?itok=jCFQDk_s&quot; width=&quot;225&quot; height=&quot;400&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/cognitive-services.png?itok=zpTX7ugG&quot; width=&quot;480&quot; height=&quot;248&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/computer-vision.png?itok=W27vTiSb&quot; width=&quot;480&quot; height=&quot;210&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/key-screenshot.png?itok=L6miSGb4&quot; width=&quot;480&quot; height=&quot;233&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/cv-quota.png?itok=E5hU3H14&quot; width=&quot;480&quot; height=&quot;87&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/camvision-designer.png?itok=r52auETc&quot; width=&quot;480&quot; height=&quot;382&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/camvision-blocks1.png?itok=e6844wF6&quot; width=&quot;480&quot; height=&quot;207&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
          &lt;figure class=&quot;field-item&quot;&gt;
        &lt;img typeof=&quot;foaf:Image&quot; src=&quot;http://explore.appinventor.mit.edu/sites/explore.appinventor.mit.edu/files/styles/large/public/blog/camvision-blocks2.png?itok=mkLmQMyg&quot; width=&quot;480&quot; height=&quot;217&quot; alt=&quot;&quot; /&gt;              &lt;/figure&gt;
      &lt;/div&gt;
&lt;/div&gt;
&lt;section class=&quot;field field-name-field-genre field-type-list-text field-label-above view-mode-rss&quot;&gt;&lt;h2 class=&quot;field-label&quot;&gt;Genre:&amp;nbsp;&lt;/h2&gt;&lt;div class=&quot;field-items&quot;&gt;&lt;div class=&quot;field-item even&quot;&gt;Blog&lt;/div&gt;&lt;/div&gt;&lt;/section&gt;</description>
 <pubDate>Wed, 18 Jan 2017 23:33:24 +0000</pubDate>
 <dc:creator>Karen</dc:creator>
 <guid isPermaLink="false">842 at http://explore.appinventor.mit.edu</guid>
</item>
</channel>
</rss>
